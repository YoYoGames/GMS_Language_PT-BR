<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Desenho</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Some basic code and DnD to show people how things are drawn." />
  <meta name="rh-index-keywords" content="Quick Start - Drawing" />
  <meta name="search-keywords" content="drawing,draw event,GUI layer" />
  <meta name="robots" content="NOODP" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Desenho</h1>
  <p>Esta seção (e a seção seguinte sobre <a href="Movement_And_Controls.htm">Movimento e Controles</a>) tem como objetivo dar-lhe exemplos práticos de <span class="notranslate">GML</span> ou <span class="notranslate">DnD™</span>para que você possa começar o mais rápido possível a fazer seus primeiros projetos de jogo. Nós
    não explicará as coisas com muita profundidade, pois queremos que você comece a fazer as coisas o mais rápido possível, por isso encorajamos você a explorar quaisquer links à medida que for avançando e a usar a função de &quot;busca&quot; do manual para procurar por mais
    informações sobre qualquer coisa que você não tenha certeza.</p>
  <p>Nesta seção vamos nos concentrar em simplesmente desenhar informações para a tela, tanto como texto quanto como imagens, e também explicar um pouco mais sobre os diferentes <strong>eventos de</strong> desenho <strong>,</strong> especificamente, o evento principal do desenho
    e o evento do <strong>Draw GUI </strong>(note que em alguns dos exemplos você será obrigado a acrescentar outros eventos, mas nós os explicaremos à medida que chegarmos a eles).</p>
  <p><img alt="The Draw Events" class="center" src="../assets/Images/QS_Guide/QS_DrawEvents.png" /></p>
  <p>Antes de continuar, você pode querer fazer um novo projeto ( <span class="notranslate">GML</span> ou <span class="notranslate">DnD™</span>) a partir da <a href="../Introduction/The_Start_Page.htm">página inicial</a>, e adicionar (ou criar) alguns sprites, bem como um ou dois objetos, pois lhe daremos alguns
    código que você pode testar usando estes. Até mesmo um quadrado branco funcionará por enquanto como o duende para nosso objeto!</p>
  <p>Agora, como mencionado na seção sobre <a href="Objects_And_Instances.htm">Objetos e Instâncias</a>, se você não adicionar um Evento de Sorteio ao objeto, então o GameMaker <span class="notranslate">Studio 2</span> irá sortear por padrão, o que significa que se o objeto tiver um duende atribuído a ele, isto
    sprite será desenhado, completo com quaisquer transformações que tenham sido adicionadas. O que queremos dizer com transformadas? Bem, cada objeto tem um número de<span class="glossextra">variáveis</span> embutidas que controlarão como uma instância do objeto desenha seu duende quando o desenho padrão, e você pode mudar essas variáveis à medida que o jogo corre para mudar a maneira como o duende é desenhado.</p>
  <p class="note"><strong>NOTA</strong>: Você pode encontrar <a href="../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/Sprite_Instance_Variables.htm">aqui</a> uma lista de todas as variáveis embutidas que podem ser usadas para transformar sprites de exemplo.
    Os usuários do <span class="notranslate">Drag e Drop™</span>têm algumas ações dedicadas que afetam estas variáveis, que você pode encontrar <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Drawing/Drawing_Actions.htm">aqui</a>, e você também pode usar as próprias variáveis reais junto com
    as ações <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Get_Instance_Variable.htm">Get Instance Variable</a> e <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Set_Instance_Variable.htm">Set Instance Variable</a>.</p>
  <p>Vejamos alguns exemplos:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down" href="#">Mudança Alfa (Transparência)</a></p>
  <div class="droptext" data-targetname="drop_down">
    <p class="dropspot">O valor <strong>alfa </strong>é o que controla a transparência do que está sendo desenhado, e no GameMaker <span class="notranslate">Studio 2,</span> você pode usar a variável incorporada <span class="inline">image_alpha</span> para mudar o quão transparente é o duende atribuído. Para
      ver como isto funciona, abrir (ou criar) um objeto, atribuir-lhe um duende, e depois dar ao objeto um <strong>Evento de Criação</strong>. No Create Event, simplesmente adicione o seguinte <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span>:</p>
    <p class="dropspot"><img alt="DnD Draw Example For Transparency" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_1.png" /></p>
    <p class="code">var _val = aleatório(1);<br> image_alpha = _val;</p>
    <p class="dropspot">A imagem alfa é calculada como um valor de 0 a 1, onde 0 é totalmente transparente e 1 é totalmente opaco (por padrão é definido como 1). Portanto, neste exemplo, tudo o que estamos fazendo é definir a imagem alfa como um valor decimal aleatório de 0 a 1. Coloque um
      poucas instâncias deste objeto em uma sala, e então clique no botão <strong>Play </strong> <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png"> na parte superior da IDE.</p>
    <p class="dropspot">Você deve ver que cada instância do objeto desenha seu duende com uma transparência diferente, por exemplo:</p>
    <p class="dropspot"><img alt="Example Of Sprites Drawn With Different Alpha Values" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_1.png" /></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down1" href="#">Mudança da mistura de cores (Tinting)</a></p>
  <div class="droptext" data-targetname="drop_down1">
    <p class="dropspot">Quando seu objeto é o desenho padrão de um duende, este duende está na verdade sendo desenhado <strong>misturado </strong>(ou <strong>colorido</strong>) com uma cor, e este valor de cor é armazenado na variável <span class="inline">image_blend</span> incorporada.
      Por padrão esta cor é branca, o que essencialmente significa que nenhuma cor será adicionada ao duende quando ele for mostrado na tela. Entretanto, é possível usar outras cores para obter efeitos especiais, por exemplo, usar vermelho para mostrar que a instância recebeu
      alguns danos.</p>
    <p class="dropspot">Neste exemplo, vamos misturar cores diferentes com o duende enquanto uma chave é pressionada e mantida pressionada, e assim você precisará abrir (ou criar) um objeto, atribuir-lhe um duende, e então dar ao objeto uma chave para baixo <strong>&lt;Espaço&gt; Evento</strong>.</p>
    <p class="dropspot"><img alt="Add Key Down Event" class="center" src="../assets/Images/QS_Guide/QS_Add_SpaceKeyPressEvent.png" /></p>
    <p class="dropspot">Neste evento Key Down, adicione o seguinte <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span>:</p>
    <p class="dropspot"><img alt="DnD Example Using Key Down Event" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_2.png" /></p>
    <p class="code">var _col = choose(c_red, c_green, c_blue, c_yellow, c_fuchsia, c_orange);<br> image_blend = _col;</p>
    <p class="dropspot">Coloque algumas instâncias deste objeto em uma sala, e depois clique no botão Play <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png"> no topo da IDE, e teste segurando e soltando a tecla <em>Space </em>. Você
      deve ver que cada instância mudará sua cor rapidamente enquanto a chave é mantida em baixo, e parar de mudar quando for liberada:</p>
    <p class="dropspot"><img alt="Example Showing Colour Blending" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_2.png" /></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down2" href="#">Escala de mudança</a></p>
  <div class="droptext" data-targetname="drop_down2">
    <p class="dropspot">Outra das propriedades que podemos mudar para nosso sprite é o valor <strong>da escala </strong>, permitindo-nos desenhá-lo maior ou menor quando quisermos. A escala é calculada independentemente ao longo dos eixos X e Y por duas variáveis separadas, a
      <span class="inline">image_xscale</span> variável e a variável <span class="inline">image_yscale</span> variável. Por padrão, elas são definidas como 1, e atuam como <strong>multiplicadores</strong>, portanto, um valor de 0,5 seria metade da escala e um valor de 2 seria o dobro da escala.</p>
    <p class="note"><strong>IMPORTANTE! </strong>A mudança da escala do duende atribuído usando estas variáveis <strong>também mudará o tamanho da caixa de delimitação para corresponder</strong>, o que significa que a área de detecção de colisão para o duende também irá escalar.</p>
    <p class="dropspot">Neste exemplo, vamos usar algumas matemáticas simples para fazer uma instância escalar o duende para cima e para baixo em um loop. Para começar, abrir (ou criar) um objeto, atribuir-lhe um duende, e depois dar ao objeto um <strong>Evento de Criação</strong>. Neste
      evento adicione o seguinte:</p>
    <p class="dropspot"><img alt="DnD Set Variable Example" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_3_1.png" /></p>
    <p class="code">temporizador = 0;</p>
    <p class="dropspot">Agora adicione um <strong>Evento de Etapa</strong> ao objeto com isto:</p>
    <p class="dropspot"><img alt="DnD Actions To Change Sprite Scale" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_3_2.png" /></p>
    <p class="code">timer = timer + 1;<br> var _val = dsin(timer);<br> image_xscale = 1 + _val;<br> image_yscale = 1 + _val;</p>
    <p class="dropspot">Aqui estamos usando a função matemática <a href="../GameMaker_Language/GML_Reference/Maths_And_Numbers/Angles_And_Distance/dsin.htm"><span class="inline">dsin()</span></a> para gerar um valor entre -1 e 1 usando a variável temporizador, e depois aplicando
      que para as variáveis de escala. Depois de colocar algumas instâncias em uma sala e pressionar o botão <strong>Play </strong> <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png">, você deve ver como as instâncias escalam para cima e
      de uma escala de 0 a uma escala de 2 e depois novamente de volta.</p>
    <p class="dropspot"><img class="center" src="../assets/Images/QS_Guide/QS_DrawExample_3.gif" title="Animation Showing Sprite Scaling" /></p>
    <p class="dropspot">Uma última coisa... mude a seção &quot; <span class="inline">image_yscale</span>&quot; para &quot; <span class="inline">1 - _val</span>&quot; e veja o que acontece!</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>Os exemplos acima ilustram apenas algumas das muitas maneiras pelas quais você pode manipular o objeto sprite quando o <span class="notranslate">GameMaker Studio 2</span> é o desenho padrão, mas e se você quiser desenhar mais de uma coisa para um objeto? Nesses casos, você precisa usar o <strong>evento de desenho</strong> para dizer explicitamente ao <span class="notranslate">GameMaker Studio 2</span> o que desenhar, que é o que faremos nos exemplos a seguir.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down3" href="#">Desenhando Dois (ou mais) Sprites Juntos</a></p>
  <div class="droptext" data-targetname="drop_down3">
    <p class="dropspot">Para este exemplo, você precisará de dois sprites e um objeto. Chame os sprites &quot; <span class="inline">spr_One</span>&quot; e &quot; <span class="inline">spr_Two</span>&quot;, e depois defina o &quot; <span class="inline">spr_One</span>&quot;.
      para o centro e para &quot; <span class="inline">spr_Two</span>&quot;, defina sua origem para o meio-esquerda:</p>
    <p class="dropspot"><img alt="Show Origins For Sprites" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_4_1.png">Atribua o primeiro sprite (&quot; <span class="inline">spr_One</span>&quot; com a origem central) ao objeto que você criou e depois acrescente
      um Evento <strong>Create</strong>. No Create Event, adicione o seguinte <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span>:</p>
    <p class="dropspot"><img alt="Set Draw Angle Variable In DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_4_1.png" /></p>
    <p class="code">draw_angle = 0;</p>
    <p class="dropspot">Vamos usar esta variável para girar &quot; <span class="inline">spr_Two</span>&quot; com o tempo, e desenhá-la sobreposta ao duende atribuído ao objeto (&quot; <span class="inline">spr_One</span>&quot;). Para fazer isso, precisamos adicionar um <strong>evento de sorteio </strong>a
      o objeto. Ao fazer isso, estamos dizendo ao <span class="notranslate">GameMaker Studio 2</span> que queremos assumir o que a instância desenha, o que significa que nosso código incluirá uma chamada para o <a href="../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_self.htm"><span class="inline">draw_self()</span></a> função
      ou <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Drawing/Draw_Self.htm"><strong>Desenhe o duende</strong></a> ação. Esta ação simplesmente replica o que o objeto faz quando nenhum Evento de Sorteio está presente e é o desenho padrão do duende atribuído. Nós vamos
      então desenhamos o segundo duende que queremos usar como o duende de sobreposição que está girando. O <span class="notranslate">DnD™</span>e o <span class="notranslate">GML</span> se parecem com isto:</p>
    <p class="dropspot"><img alt="Draw Two Sprites With DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_4_2.png" /></p>
    <p class="code">draw_self();<br> draw_angle = draw_angle + 0,5;<br> draw_sprite_ext(spr_Two, 0, x, y, 1, 1, 1, draw_angle, c_red, 1);</p>
    <p class="dropspot">Adicione várias instâncias do objeto no editor da sala e pressione o botão <strong>Play </strong> <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png"> na parte superior da <a class="glossterm" data-glossterm="IDE" href="#">IDE</a>. Se tudo tiver corrido corretamente, você deve ver algo assim agora:</p>
    <p class="dropspot"><img alt="Animation Drawing Two Sprites Together" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_4_2.gif" /></p>
    <p class="dropspot">Antes de deixarmos este exemplo, vamos apenas ajustá-lo um pouco e, em vez de termos &quot; <span class="inline">spr_Two</span>&quot; simplesmente girar, vamos fazer com que ele aponte para a posição do mouse. Para isso, precisamos mudar o Evento de Sorteio
     <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span> para ter este aspecto:</p>
    <p class="dropspot"><img alt="Edited Draw Code For Drawing Two Sprites With DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_4_3.png" /></p>
    <p class="code">draw_self();<br> draw_angle = point_direction(x, y, mouse_x, mouse_y);<br> draw_sprite_ext(spr_Two, 0, x, y, 1, 1, 1, draw_angle, c_red, 1);</p>
    <p class="dropspot">Execute o projeto novamente e desta vez você verá algo muito diferente!</p>
    <p class="dropspot"><img alt="Animation Drawing Two Sprites Pointing At Mouse" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_4_3.gif">O duende agora aponta para o mouse, independentemente de para onde você o mova! Como você pode ver, a estratificação dos sprites é um grande
      maneira de acrescentar detalhes a um objeto ou de ter algo que se mova independentemente do duende &quot;base&quot; atribuído ao objeto, e é uma ferramenta poderosa que você provavelmente usará muito em seus próprios projetos.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down4" href="#">Desenho de outras coisas que não Sprites</a></p>
  <div class="droptext" data-targetname="drop_down4">
    <p class="dropspot">Você pode desenhar coisas no Evento de Desenho que não sejam sprites também, como texto, ou formas. Neste exemplo, usaremos a função <span class="notranslate">DnD™</span>ou GML <span class="inline">draw_self()</span> para desenhar o objeto sprite, mas também desenharemos algumas outras coisas,
      começando com algum <strong>texto</strong>. Para este exemplo, será necessário um duende e um objeto (com o duende atribuído a ele). No objeto, primeiro adicione um <strong>Create Event</strong> com este <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span>:</p>
    <p class="dropspot"><img alt="Setting Variables Using DnD" class="center" height="506" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_5_1_1.png" width="317" /></p>
    <p class="code">nome = escolher(&quot;Fred&quot;, &quot;Jonas&quot;, &quot;Sharon&quot;, &quot;Kate&quot;, &quot;Frank&quot;, &quot;John&quot;, &quot;Monica&quot;, &quot;Amanda&quot;);<br> número = irandom(100);</p>
    <p class="dropspot">Tudo o que isso faz é dizer ao <span class="notranslate">GameMaker Studio 2</span> para escolher um dos nomes listados e atribuí-lo a uma variável, assim como gerar um número aleatório de 0 a 100 para cada instância do objeto. Desejamos atrair estes valores para a tela, e assim para isso
      agora você precisa adicionar um <strong>evento de sorteio</strong> e nele adicionar o seguinte <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span>:</p>
    <p class="dropspot"><img alt="Drawing Text Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_5_1.png" /></p>
    <p class="code">draw_self();<br> draw_set_halign(fa_center);
      <br> draw_text(x, y + 32, &quot;Meu nome é &quot; + nome);<br> draw_text(x, y + 48, &quot;Meu número é &quot; + string(número));</p>
    <p class="dropspot">Você notará no código acima que nós usamos o <a href="../GameMaker_Language/GML_Reference/Strings/string.htm"><span class="inline">string()</span></a> função ou <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Data_Types/Number_To_String.htm"><strong>Número para String</strong></a> ação
      sobre a variável &quot;número&quot; que queremos desenhar. Isto porque todo texto tem que ser composto de <em>caracteres</em>, não valores, e por isso precisamos usar esta função/ação para converter o valor numérico naqueles caracteres que queremos
      sorteio. Neste caso, estamos pegando o número aleatório que geramos e transformando-o em uma &quot;cadeia&quot; de caracteres que podem ser desenhados. Observe também que definimos o <strong>alinhamento do</strong> texto. Isto simplesmente diz ao <span class="notranslate">GameMaker Studio 2</span> por onde começar
      desenhando o texto relativo à posição dada e, neste caso, queremos que o texto seja centralizado ao longo do eixo x.</p>
    <p class="dropspot">Adicione várias instâncias do objeto no editor da sala e pressione o botão Play <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png"> na parte superior da IDE. Você deve ver algo como isto:</p>
    <p class="dropspot"><img alt="Sprites Being Drawn Along With Text" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_5_1.png" /></p>
    <p class="dropspot">Em todos os exemplos até agora, temos desenhado o duende designado para a instância, mas nem sempre tem que ser assim. <strong>Você pode desenhar o que quiser</strong> no evento do sorteio, independentemente do duende designado. Para ilustrar
      Neste ponto, vamos mudar o código que temos atualmente, removendo a chamada <span class="inline">draw_self()</span> e substituindo por uma função para desenhar uma elipse colorida, como esta:</p>
    <p class="dropspot"><img alt="Drawing Shapes Along With Text Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_5_2.png" /></p>
    <p class="code">draw_ellipse_colour(x - 50, y - 32, x + 50, y + 32, c_fuchsia, c_lime, false);<br> draw_set_halign(fa_center);
      <br> draw_text(x, y + 32, &quot;Meu nome é &quot; + nome);<br> draw_text(x, y + 48, &quot;Meu número é &quot; + string(número));</p>
    <p class="dropspot">Execute o projeto novamente e você deve ver isto:</p>
    <p class="dropspot"><img alt="Example Of Drawing Shapes And Text Together" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_5_2.png" /></p>
    <p class="dropspot">Uma coisa importante a se notar sobre isto, é que mesmo que não estejamos desenhando o duende designado, ele <strong>ainda será usado para a detecção de colisão</strong>. Portanto, embora você possa estar desenhando uma coisa, as colisões ainda serão calculadas com base
      no duende designado como se ele fosse colocado na sala junto com a instância, mesmo que não seja visível. Isto é bastante útil na verdade, pois significa que você pode desenhar diferentes sprites, mas manter uma única <strong>máscara de colisão</strong> baseada em
      o duende designado. Observe também que você ainda pode aplicar as diferentes transformações como a escala X/Y, e as colisões serão baseadas no tamanho alterado, mesmo que não haja nada sendo desenhado para mostrar isto.</p>
  </div>
  <p> </p>
  <p> </p>
  <h1>A camada GUI</h1>
  <p>Mencionamos no topo da página que estaríamos falando sobre o <strong>Evento</strong> de Sorteio <strong>GUI</strong> assim como sobre o Evento de Sorteio, então vamos olhar para isso agora. O Evento de Sorteio GUI funciona em algo chamado de <strong> Camada <a class="glossterm" data-glossterm="GUI" href="#">GUI</a></strong>,
    que é uma camada especial de desenho de largura e altura fixas que é desenhada sobre as instâncias na sala. O ótimo da camada de GUI é que <em> ela não se move com a câmera da sala, por isso</em> é o lugar ideal para adicionar a GUI estática
    itens, como pontuação, barras de saúde e outras informações que seu jogo requer para comunicar ao usuário. Você pode encontrar mais informações sobre a camada GUI na seção <a href="../The_Asset_Editors/Object_Properties/Draw_Events.htm">Eventos de Sorteio</a> 
    do manual.</p>
  <p class="note"><strong>NOTA</strong>: As salas podem ser maiores que o tamanho da tela, de modo que você pode ter grandes níveis para que o jogador se movimente para dentro. Isto significa que no Editor de Sala (ou em código) você precisa definir uma <strong>câmera </strong>que siga a ação de seu
    jogo. Esta é basicamente uma forma de montar uma área fixa da tela para exibir diferentes partes da sala maior com base - por exemplo - na posição do jogador na sala, e é usada em muitos jogos. Pense no modo como a vista sempre segue
    o personagem principal em jogos clássicos como Mario ou Zelda. Isso é feito com câmeras. Para mais informações, consulte a seção <a href="../The_Asset_Editors/Room_Properties/Room_Properties.htm">Propriedades da Sala</a> na seção Editor da Sala do manual.</p>
  <p>Os exemplos a seguir serão todos usando o evento <strong>Draw GUI</strong>, então você precisará criar um objeto e adicionar esse evento a ele. Note que o objeto não precisa de um sprite designado, pois não estamos querendo desenhar nada por padrão,
    nem precisamos dele para detectar colisões. Objetos como este, que são projetados apenas para desenhar coisas ou controlar certos aspectos do jogo, são freqüentemente chamados de <strong>Objetos Controladores</strong>. Observe também que estaremos usando o mesmo objeto para
    todos os exemplos, então recomendamos que você os examine um após o outro (embora isto não seja estritamente necessário).</p>
  <p><img alt="Draw GUI Event In An Object" class="center" src="../assets/Images/QS_Guide/QS_DrawGUIObject.png"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down5" href="#">Texto do desenho</a></p>
  <div class="droptext" data-targetname="drop_down5">
    <p class="dropspot">Ao desenhar para a camada GUI, o canto superior esquerdo é a posição de origem, e à direita é +X e para baixo é +Y. Isto torna o posicionamento de texto e gráficos muito fácil, como você verá neste exemplo. Tudo o que vamos fazer aqui é desenhar um valor
      que representa a pontuação do jogador, então em nosso objeto precisaremos adicionar um <strong>Create Event para </strong>rubricar uma variável para manter este valor, como este:</p>
    <p class="dropspot"><img alt="Defining A Variable Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_6_1.png" /></p>
    <p class="code">player_score = 0;</p>
    <p class="dropspot">Também queremos adicionar um <strong>Teclado para baixo &lt;Espaço&gt; Evento ao</strong> objeto, já que usaremos isso para incrementar a pontuação toda vez que você pressionar a tecla Espaço.</p>
    <p class="dropspot"><img alt="Adding A Space Key Pressed Event" class="center" src="../assets/Images/QS_Guide/QS_Add_SpaceKeyPressEvent.png" /></p>
    <p class="dropspot">Neste caso, acrescente o seguinte:</p>
    <p class="dropspot"><img alt="DnD Actions In The Space Key Event" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_6_2.png" /></p>
    <p class="code">var _val = irandom(100);<br> player_score = player_score + _val;</p>
    <p class="dropspot">Finalmente, vamos sortear o valor da pontuação no evento do Sorteio GUI, como este:</p>
    <p class="dropspot">Neste caso, acrescente o seguinte:</p>
    <p class="dropspot"><img alt="Drawing Text To The GUI Layer Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_6_3.png" /></p>
    <p class="code">draw_set_halign(fa_left);<br> draw_set_colour(c_yellow);
      <br> draw_text(32, 32, &quot;SCORE:&quot;);<br> draw_set_colour(c_white);
      <br> var _str = string(player_score);<br> draw_text_transformed(32, 48, _str, 2, 2, 0);</p>
    <p class="dropspot">Você notará como usamos valores codificados <a class="glossterm" data-glossterm="código rígido" href="#">(ou</a> fixos) para a posição x/y do texto a ser desenhado, já que não precisamos que ele seja relativo a nenhuma instância, já que estamos desenhando
      para a camada GUI. Também usamos a função &quot;definir cor&quot; para mudar a cor do texto, bem como a fração &quot;transformada&quot; para tornar o valor real da pontuação maior, o que ilustra como você pode personalizar
      elementos de texto em seus próprios jogos.</p>
    <p class="dropspot">Adicione uma única instância deste objeto ao seu quarto agora e depois pressione o botão <strong>Play </strong> <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png">. Quando o jogo for executado, pressione e solte a tecla <span class="inline">&lt;Space&gt;</span> e você deverá ver o valor da pontuação aumentar.</p>
    <p class="dropspot"><img alt="Animation Showing Text Being Drawn To The GUI Layer" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_6.gif" /></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down6" href="#">Sprites de Desenho</a></p>
  <div class="droptext" data-targetname="drop_down6">
    <p class="dropspot">Neste exemplo, vamos utilizar a camada GUI para desenhar alguns sprites. O uso mais óbvio para isso é desenhar vidas dos jogadores, então vamos em frente e façamos exatamente isso! Você vai precisar de um duende para este exemplo - que deve ter cerca de 64x64 pixels
      - mas não deve ser atribuído ao objeto, pois seremos nós mesmos a desenhá-lo.</p>
    <p class="dropspot">Para começar, precisamos adicionar algumas variáveis novas ao objeto no <strong>Create Event</strong> (se você fez o exemplo anterior, adicione o seguinte abaixo o que já está lá):</p>
    <p class="dropspot"><img alt="Defining Variables Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_7_1.png" /></p>
    <p class="code">player_lives = 3;<br> gui_w = display_get_gui_width();</p>
    <p class="dropspot">Neste código inicializamos uma variável para a vida do jogador, mas também criamos uma variável para segurar a largura da camada GUI, para que possamos posicionar as coisas corretamente em relação à direita da tela. Poderíamos simplesmente codificar um valor no código
      e usar isso, mas isso significaria que se fizermos qualquer mudança no tamanho da sala, ou se adicionarmos câmeras, etc... mais tarde, então precisaríamos passar pelo código e mudar o valor em todos os lugares. Usando o <a href="../GameMaker_Language/GML_Reference/Cameras_And_Display/display_get_gui_width.htm"><span class="inline">display_get_gui_width()</span></a> função
      em vez disso, significa que não precisamos nos preocupar com nenhuma mudança futura como essa, pois o código se adaptará automaticamente ao tamanho que a camada GUI acabar.</p>
    <p class="dropspot">Em seguida, queremos adicionar um <strong>Teclado pressionado &lt;Enter&gt; Evento ao</strong> objeto, já que usaremos isso para mudar o número de vidas toda vez que a tecla Enter for pressionada:</p>
    <p class="dropspot"><img alt="Adding An Enter Key Pressed Event" class="center" src="../assets/Images/QS_Guide/QS_Add_EnterKeyPressEvent.png" /></p>
    <p class="dropspot">Neste caso, acrescente o seguinte:</p>
    <p class="dropspot"><img alt="DnD In The Enter Key Down Event" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_7_2.png" /></p>
    <p class="code">player_lives = player_lives -1;<br> se player_lives &lt; 0<br> {<br> player_lives = 3;<br> }</p>
    <p class="dropspot">Finalmente, precisamos desenhar os sprites para a tela. Para isso, estaremos usando um loop &quot; <span class="inline">for</span>&quot; (informações usando GML aqui e <span class="notranslate">para</span> <a href="../GameMaker_Language/GML_Overview/Language_Features/for.htm">DnD™</a> 
     <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Loops/For.htm">aqui</a>), junto com a variável de largura GUI para posicionar tudo no canto superior direito da tela. Portanto, acrescente isto no evento Draw Gui (após qualquer outra ação que possa
      têm de exemplos anteriores):</p>
    <p class="dropspot"><img alt="DnD Actions To Draw Sprites To The GUI Layer" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_7_3.png" /></p>
    <p class="code">for (var i = 0; i &lt; player_lives; i += 1;)<br> {<br> var _xx = gui_w - 48 - (i * 70);<br> draw_sprite(spr_Heart, 0, _xx, 48);<br> }</p>
    <p class="dropspot">Se você ainda não adicionou uma instância deste objeto a uma sala, vá em frente e adicione-a agora (apenas uma!), então pressione o botão Play <img alt="Play Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_PlayGame.png" width="24">. Uma vez que o jogo estiver funcionando, pressione a tecla <span class="inline">&lt;Enter&gt;</span> várias vezes para ver as vidas mudarem.</p>
    <p class="dropspot"><img alt="Animation Drawing Sprites To The GUI Layer" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_7.gif" /></p>
    <p class="dropspot">Antes de deixar este exemplo, você deve experimentar com o número de vidas e ver o que acontece. No momento está definido para 3, mas mude o evento Create Event e o evento Key Pressed para definir o valor para 5, ou 10... se você já fez tudo
      certo, então o código deve adaptá-los e desenhá-los todos corretamente!</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down7" href="#">Desenho de uma barra de saúde</a></p>
  <div class="droptext" data-targetname="drop_down7">
    <p class="dropspot">Este último exemplo cobre o desenho de uma barra de saúde para a camada GUI. Há várias maneiras de fazer isso, mas o <span class="notranslate">GameMaker Studio 2</span> tem uma função construída especificamente para fazer barras de saúde, então é isso que estaremos usando aqui, embora
      você pode criar seu próprio usando sprites ou formas também. Para começar, como antes, precisamos rubricar um varaible para manter o valor de saúde, então adicione o seguinte <span class="notranslate">DnD™</span>ou <span class="notranslate">GML</span> no <strong>Create Event</strong> do objeto (depois de qualquer outro código
      que já pode estar lá):</p>
    <p class="dropspot"><img alt="Defining A Variable Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_8_1.png" /></p>
    <p class="code">player_health = 100;</p>
    <p class="dropspot">Queremos usar as teclas de seta para mudar o valor de saúde para cima ou para baixo dependendo de qual tecla de seta é pressionada, e poderíamos fazer isso adicionando em dois <strong>Teclado pressionado &lt;Seta&gt;</strong> eventos, porém provavelmente é mais fácil usar um Evento Passo <strong>e</strong> algum código para verificar as teclas, então vá em frente e adicione <strong>agora</strong> um Evento Passo <strong>com</strong> o seguinte DnD™ ou <span class="notranslate">GML</span>:</p>
    <p class="dropspot"><img alt="Step Event DnD Actions" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_8_2.png" /></p>
    <p class="code">if keyboard_check(vk_up)<br> {<br> if player_health &lt; 100<br> {<br> player_health = player_health + 1;<br> } <br> } <br> if keyboard_check(vk_down)<br> {<br> if player_health &gt; 0<br> {<br> player_health = player_health - 1;<br> } <br> }</p>
    <p class="dropspot">Com isso feito, podemos de fato chegar ao desenho da barra de saúde, que é feito no evento Draw GUI, acrescentando o seguinte (depois de qualquer outra coisa que já esteja lá):</p>
    <p class="dropspot"><img alt="DnD For The Draw GUI Event To Draw A Healthbar" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_8_3.png" /></p>
    <p class="code">var _xx = gui_w / 2;<br> draw_healthbar(_xx - 50, 24, _xx + 50, 40, player_health, c_black, c_white, c_red, c_lime, 0, true, true);</p>
    <p class="dropspot">Adicione uma instância deste objeto a uma sala se você ainda não o fez (apenas uma, no entanto!), e então pressione o botão Play <img alt="Play Icon" class="icon" src="../assets/Images/Icons/Icon_PlayGame.png">. Uma vez que o jogo seja
      rodando pressione as teclas <span class="inline">&lt;Up Arrow&gt;</span> e <span class="inline">&lt;Down Arrow&gt;</span> várias vezes para ver a mudança na saúde.</p>
    <p class="dropspot"><img alt="Animation Of Drawing A Healthbar" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_8.gif" /></p>
  </div>
  <p> </p>
  <p>Esperamos que depois de fazer estes exemplos você tenha um pouco mais de confiança ao usar o <span class="notranslate">GameMaker Studio 2</span> e um pouco mais de compreensão de como tudo isso funciona. A próxima seção explorará como fazer com que estas coisas que você tem desenhado se movimentem pela sala
    bem como aceitar - e responder - a contribuição do usuário.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Content.htm">Índice</a></div>
        <div style="float:right">A seguir: <a href="Movement_And_Controls.htm">Movimento e Controles</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Drawing
Drawing Examples
Quick Start Drawing
-->
  <!-- TAGS
qs_drawing
-->

</body></html>