<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_revolute_create</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_revolute_create" />
  <meta name="rh-index-keywords" content="physics_joint_revolute_create" />
  <meta name="search-keywords" content="physics_joint_revolute_create" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_joint_revolute_create</h1>
  <p>Uma junta revoluta força dois corpos a compartilhar um ponto de ancoragem comum (muitas vezes chamado de ponto de dobradiça) e a junta tem um único grau de liberdade - a rotação relativa dos dois corpos em torno deste ponto. Para especificar uma revoluta, é necessário fornecer duas instâncias
    e um único ponto de ancoragem na sala, como você pode ver na imagem fornecida:</p>
  <p><img alt="Revolute joint anchor points illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_1.png">Se você olhar para a imagem, você pode ver que as duas instâncias foram criadas
    para sobrepor e, no ponto em que se tocam, definimos uma junta revoluta. Agora, esta junta pode ser limitada em sua liberdade de rotação graças aos valores &quot;ang_min_limit&quot; e &quot;ang_max_limit&quot;. Como isto funciona? Bem,
    vamos olhar para outra imagem:</p>
  <p><img alt="Revolute joint angle limits illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_2.png">Como você pode ver, os ângulos no mundo da física <i>não</i> são os mesmos que o padrão
   <span class="notranslate">GameMaker Studio 2</span> ângulos onde a direita é 0 graus e depois vai no sentido anti-horário, de modo que acima é 90, esquerda é 180, e abaixo é 270. Não, ao lidar com a junta giratória, o eixo de 0 graus vai da posição da junta até a origem do
    segunda instância definida pela função e os ângulos são então calculados no sentido horário. Se você ligar o limite do ângulo, os limites são definidos como sendo relativos a este eixo de 0 graus e a faixa limite <i>deve incluir zero</i>, caso contrário
    a junta se soltará quando a sala começar. Finalmente, você pode definir a junta como tendo ou não um motor. Isto significa que quando não for influenciada por uma colisão, a junta se moverá em uma direção, que é definida pela velocidade do motor com um número positivo
    sendo no sentido horário e um número negativo sendo no sentido anti-horário. O argumento &quot;max_motor_torque&quot; é para limitar a velocidade da rotação de modo que você não tenha um motor perpetuamente acelerador e para limitar a influência de uma colisão
    pode ter na rotação. Desta forma, você pode usar um motor de junta para simular o atrito da junta, ajustando a velocidade da junta a zero e o torque máximo a algum valor pequeno, mas significativo. O motor tentará evitar que a junta gire, mas produzirá
    a uma carga significativa.</p>
  <p>Como em todas as juntas, se você definir o valor &quot;col&quot; como verdadeiro, então <tt>as</tt> duas instâncias podem interagir e colidir uma com a outra, mas somente se <i>elas</i> tiverem eventos de colisão, porém, se for definido como falso, <tt>elas</tt> não irão colidir
    não importa o que aconteça.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_max_limit, ang_limit, max_motor_torque, motor_velocidade, motor, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td>A primeira instância para se conectar com a junta</td>
      </tr>
      <tr>
        <td>inst2</td>
        <td>A segunda instância para se conectar com a junta</td>
      </tr>
      <tr>
        <td>w_anchor_x</td>
        <td>A coordenada x para a articulação, dentro do mundo do jogo</td>
      </tr>
      <tr>
        <td>w_anchor_y</td>
        <td>A coordenada y para a articulação, dentro do mundo do jogo</td>
      </tr>
      <tr>
        <td>ang_min_limit</td>
        <td>O limite inferior permitido para o ângulo de junção</td>
      </tr>
      <tr>
        <td>ang_max_limit</td>
        <td>O limite superior permitido para o ângulo de junção</td>
      </tr>
      <tr>
        <td>ang_limit</td>
        <td>Se o ângulo da junta deve ser limitado (verdadeiro) ou não (falso)</td>
      </tr>
      <tr>
        <td>max_motor_torque</td>
        <td>Define o torque máximo do motor utilizado para atingir a velocidade desejada do motor (em Newtons por metro)</td>
      </tr>
      <tr>
        <td>velocidade_do_motor</td>
        <td>Esta é a velocidade na qual o motor deve girar</td>
      </tr>
      <tr>
        <td>motor</td>
        <td>Se o motor deve estar ativo (verdadeiro) ou não (falso)</td>
      </tr>
      <tr>
        <td>col</td>
        <td>Se as duas instâncias podem colidir (verdadeiras) ou não (falsas)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">Inteiro (índice da junta)</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">var mainFixture, o_id;<br> mainFixture = physics_fixture_create();<br> physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br> o_id=instance_create_layer(x+25, y, &quot;Instances&quot;, obj_Door);<br> physics_fixture_bind(mainFixture_bind(mainFixture),
    id);<br> physics_fixture_bind(mainFixture, o_id);<br> physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0, 0, 0);<br> physics_fixture_delete(mainFixture);
  </p>
  <p>O código acima cria e define uma nova fixação e depois cria uma instância de &quot;obj_Door&quot;, ligando a fixação criada aos dois novos objetos. Eles são então unidos por uma junta giratória sem motor e os ângulos limitados a +/- 90 graus
    balanço. Finalmente, a fixação é apagada, pois não é mais necessária.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Joints.htm">Juntas</a></div>
        <div style="float:right">A seguir: <a href="physics_joint_prismatic_create.htm">physics_joint_prismatic_create</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_revolute_create
-->
  <!-- TAGS
physics_joint_revolute_create
-->
</body>
</html>