<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Física</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for physics functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Physics" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Física</h1>
  <p>A integração de uma biblioteca física dedicada ao <span class="notranslate">GameMaker Studio 2</span> significa que agora você pode assumir o controle de todos os aspectos do comportamento físico dos objetos dentro de seu mundo de jogo, particularmente colisões e interação de objetos. O &quot;tradicional
    tradicional&quot; (o qual o <span class="notranslate">GameMaker Studio 2</span> é o padrão) é um sistema &quot;reativo&quot;, onde você verifica se há uma colisão e depois reage <i>a</i> essa colisão com o código que você coloca em objetos individuais. Isto é bom para jogos simples,
    mas quando você tem um grande número de objetos e tem que codificar como todos eles reagem a diferentes situações no mundo do jogo, rapidamente se torna óbvio que este sistema simplesmente não é suficiente. É quando você tem que recorrer ao sistema de física do GameMaker <span class="notranslate">Studio 2</span>.</p>
  <p>O sistema físico funciona de uma maneira muito diferente das colisões normais. É mais um sistema &quot;passivo&quot; onde você define uma série de propriedades para seus objetos no mundo do jogo, assim como as propriedades do próprio mundo do jogo, antes
    quaisquer colisões ou interações ocorram. Estas &quot;regras&quot; codificadas então governarão a forma como tudo em seu mundo de jogo interage. Desta forma, com alguns códigos simples e a configuração correta da sala, você pode criar interações muito complexas entre
    objetos e o mundo que ocorrerão e resolverão <i>sem que</i> você tenha que codificar para cada resultado possível.</p>
  <p>Há algumas coisas que você deve observar ao trabalhar com o mundo da física do <span class="notranslate">GameMaker Studio 2</span>:</p>
  <ul class="colour">
    <li>O sistema físico existe &quot;à parte&quot; da estrutura básica da sala e da instância do GameMaker <span class="notranslate">Studio 2, o que significa</span> que seus timings e funções não estão necessariamente ligados à velocidade da sala e à ordem dos passos, como tudo mais.</li>
    <li>O sistema físico substitui muitas das funções normais da instância... por exemplo, em vez de definir uma velocidade e uma direção para uma instância, se ela tiver sido declarada como sendo um corpo físico totalmente simulado, você usaria uma <i>força</i> ou <i>impulso</i> para fazê-la se mover no mundo do jogo, ou se ela não estiver habilitada para a física, você mesmo precisará definir as posições x e y. Isto requer um pouco de acostumação, então experimente com as funções da física e conheça como tudo funciona antes
      tentando integrá-los ao seu projeto.</li>
    <li>Você deve limitar o número de instâncias que são criadas, assim como o número de colisões e grupos de colisão com os quais o mundo da física tem que lidar. Você <i>não pode</i> ter milhares de ocorrências, todas com propriedades físicas e colisões
      e esperar que tudo funcione bem devido ao fato de que a física requer alguns cálculos bastante intensivos, portanto, limite-se e otimize sempre que possível.</li>
    <li>Ao configurar as colisões, use os pais o máximo possível, já que o sistema de colisão tem um número limitado de <i>bits de colisão</i> disponíveis para atribuir às instâncias do Box2D para detectar colisões. Por exemplo, se você tiver cinco objetos de parede diferentes,
      não verifique cinco colisões, mas crie um objeto pai e o atribua às cinco paredes e depois tenha UMA verificação de colisão com o objeto pai. As propriedades físicas dos objetos <i>não</i> são <i>herdadas</i> apenas das colisões. Desta forma, você
      pode manter seu jogo otimizado e livre de erros.</li>
    <li>Tente não mover instâncias de um ponto da sala para outro de nenhuma outra forma que não seja usando as funções físicas (ou seja: não defina o manual de coordenadas x/y). Embora isto possa ser feito e em algumas circunstâncias possa ser necessário, geralmente é
      a ser evitado devido aos resultados imprevisíveis que pode ter no motor da física, especialmente quando se tenta resolver colisões.</li>
    <li>Deve-se tomar cuidado ao ligar os dispositivos, pois eles podem ser ligados a objetos e instâncias de forma independente. Isto significa que se você amarrar um acessório a (por exemplo) &quot;o_Wall&quot;, todas as <b>instâncias</b> daquele objeto terão o acessório. Se você apenas
      quer ligar um acessório a uma instância, então use a identificação dessa instância na função apropriada.</li>
    <li>Esteja ciente de que, devido às diferenças na precisão do ponto flutuante, você pode descobrir que versões de seu jogo para diferentes plataformas alvo podem exibir um comportamento sutilmente diferente da versão padrão do <span class="notranslate">Windows</span>, embora cada versão seja autoconsistente.
      através de execuções subseqüentes.</li>
    <li>Para evitar instabilidades na simulação física, o Box2D limita a quantidade que um corpo pode girar e traduzir dentro de uma única atualização. As limitações aparentes irão variar de acordo com a precisão da simulação física de acordo com
      com o número de atualizações e velocidade de atualização do mundo da física, e também de acordo com a escala do mundo da física. Isto significa que (por exemplo) se você tiver uma velocidade de atualização mundial de 60, a velocidade máxima de movimento seria de 20.</li>
  </ul>
  <p>As informações sobre as funções físicas podem ser encontradas nas páginas seguintes:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="The_Physics_World/The_Physics_World.htm">O mundo da Física</a></li>
    <li><a href="Forces/Forces.htm">Forças</a></li>
    <li><a href="Fixtures/Fixtures.htm">Instalações</a></li>
    <li><a href="Joints/Joints.htm">Juntas</a></li>
    <li><a href="Soft_Body_Particles/Soft_Body_Particles.htm">Partículas macias do corpo</a></li>
    <li><a href="Physics_Variables/Physics_Variables.htm">Variáveis Físicas</a></li>
  </ul>
  <p> </p>
  <p>Finalmente, existem algumas funções especiais de física que podem ser úteis para simulações de física mais avançadas. A primeira é para testes de possíveis colisões em um ponto específico da sala, e a segunda é para gerar massa e inércia personalizadas.
    propriedades dentro de uma instância:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="physics_test_overlap.htm">fisica_test_overlap</a></li>
    <li><a href="physics_mass_properties.htm">física_mass_properties</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../GML_Reference.htm">Referência<span class="notranslate">GML</span></a></div>
        <div style="float:right">A seguir: <a href="../In_App_Purchases/In_App_Purchases.htm">Em Compras App</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Physics
Physics Functions
-->
  <!-- TAGS
physics_functions
-->
</body>
</html>