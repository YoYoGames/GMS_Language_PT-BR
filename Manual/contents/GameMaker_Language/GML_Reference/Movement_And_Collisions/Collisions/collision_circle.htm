<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>círculo_de_colisão</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion collision_circle" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>círculo_de_colisão</h1>
  <p><span class="inline">Collision_circle</span> cria uma zona circular do raio dado pelo usuário em torno dos pontos x1,y1 e, em seguida, verifica essa zona para uma colisão com <b>qualquer</b> instância do objeto especificado pelo argumento &quot;obj&quot;.
    Esta verificação pode ser precisa ou não, mas para que colisões precisas sejam habilitadas, o objeto ou instância que você está verificando também <i>deve</i> ter colisões precisas habilitadas para seu sprite. Caso contrário, a verificação padrão é baseada em caixas delimitadoras.
    A imagem a seguir ilustra como isto funciona:</p>
  <p><img alt="Collision circle example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png">Aqui, a instância no meio está usando um círculo de colisão para verificar a bola
    objetos. Agora, os azuis <i>não</i> têm uma caixa de delimitação precisa e, como você pode ver, mesmo que o duende não esteja realmente tocando o círculo, a colisão ainda pode acontecer (mesmo se você definir a opção precisa na função como verdadeira) como a delimitação
    A caixa daquele duende sobrepõe a área circular definida pelo círculo de colisão. Por outro lado, as bolas verdes só serão consideradas em colisão se o duende real sobrelaçar com o círculo definido. Lembre-se, para colisões precisas a serem consideradas
   <i>tanto</i> o objeto sprite quanto a função de colisão devem ter uma marcação precisa como em cima. Também deve ser observado que o valor de retorno da função pode ser o id de <i>qualquer uma</i> das instâncias consideradas como em colisão.</p>
  <p>Note que ao invés de um índice de objetos você pode fornecer uma instância <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><tt>id</tt></a> para verificar uma instância específica, ou as <a href="../../../GML_Overview/Instance_Keywords.htm">palavras-chave da instância</a> <span class="inline">all</span>, ou <span class="inline">other</span> (dependendo do evento e do escopo do código atual).</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>x1</td>
        <td>A coordenada x do centro do círculo a verificar.</td>
      </tr>
      <tr>
        <td>y1</td>
        <td>A coordenada y do centro do círculo a verificar.</td>
      </tr>
      <tr>
        <td>rad</td>
        <td>O raio (distância em pixels de seu centro até sua borda).</td>
      </tr>
      <tr>
        <td>obj</td>
        <td>O objeto a ser verificado, por exemplo, colisões.</td>
      </tr>
      <tr>
        <td>prec</td>
        <td>Se a verificação é baseada em colisões pixel-perfect (verdadeiro = lento) ou em sua caixa de delimitação em geral (falso = rápido).</td>
      </tr>
      <tr>
        <td>notme</td>
        <td>Se a instância de chamada, se relevante, deve ser excluída<tt>(verdadeira</tt>) ou não<tt>(falsa</tt>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">Identificação da instância ou de ninguém</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br> {
    <br> image_index = 1;<br> }
    <br> outra imagem_index = 0;</p>
  <p>O código acima verificará uma circular com um raio de 20pixel para uma colisão com &quot;obj_Cursor&quot; e, se houver uma, definirá o índice da imagem do objeto executando o código para 1, mas se não houver, definirá o índice da imagem do objeto
    a 0.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Collisions.htm">Colisões</a></div>
        <div style="float:right">Próximo: <a href="collision_circle_list.htm">collision_circle_list</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>