<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>retângulo_em_círculo</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion rectangle_in_circle" />
  <meta name="rh-index-keywords" content="rectangle_in_circle" />
  <meta name="search-keywords" content="rectangle_in_circle" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>retângulo_em_círculo</h1>
  <p>Esta função irá verificar uma área retangular que você define para ver se ela não está em colisão, completamente dentro dos limites de destino, ou se está simplesmente tocando, uma área circular definida. Se eles não estiverem tocando em nada, a função retornará
    0, se a fonte estiver completamente dentro do destino ela retornará 1, e se estiverem simplesmente sobrepostos então ela retornará 2. A imagem abaixo ilustra isto:</p>
  <p><img alt="Rectangle circle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_circle.png" /></p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">retângulo_em_círculo(sx1, sy1, sx2, sy2, x, y, rad);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>sx1</td>
        <td>A coordenada x do lado esquerdo do retângulo da fonte.</td>
      </tr>
      <tr>
        <td>sy1</td>
        <td>A coordenada y do lado superior do retângulo da fonte.</td>
      </tr>
      <tr>
        <td>sx2</td>
        <td>A coordenada x do lado direito do retângulo da fonte.</td>
      </tr>
      <tr>
        <td>sy2</td>
        <td>A coordenada y do lado inferior do retângulo da fonte.</td>
      </tr>
      <tr>
        <td>x</td>
        <td>A coordenada x do centro do círculo</td>
      </tr>
      <tr>
        <td>y</td>
        <td>A coordenada y do centro do círculo.</td>
      </tr>
      <tr>
        <td>rad</td>
        <td>O raio em torno do ponto central no qual se deve verificar uma colisão.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">inst = instance_nearest(x, y, obj_Bullet);<br> se instance_exists(inst)<br> {
    <br> if rectangle_in_circle(inst.x - 5, inst.y - 5, inst.x + 5, inst.y + 5, x, y - 25, 20) &gt; 0<br> {
    <br> hit = true;<br> }
    <br> }
  </p>
  <p>O código acima usa a função <tt>retângulo_em_circulo</tt> para verificar se há uma colisão dentro de uma área circular e o retângulo em torno de uma instância encontrada. Se houver uma colisão (uma borda sobreposta ou englobada), então uma variável será definida como <tt>verdadeira</tt>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Collisions.htm">Colisões</a></div>
        <div style="float:right">Próximo: <a href="place_empty.htm">place_empty</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_circle
-->
  <!-- TAGS
rectangle_in_circle
-->
</body>
</html>