<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_stringify</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_stringify" />
  <meta name="rh-index-keywords" content="json_stringify" />
  <meta name="search-keywords" content="json_stringify" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_stringify</h1>
  <p>Com esta função você pode converter estruturas e matrizes únicas ou aninhadas em uma cadeia JSON válida. Você fornece o valor inicial a ser usado (um índice de array ou uma referência estrutural) e então a função a &quot;stringará&quot;, convertendo-a em uma string JSON válida,
    conversão de matrizes <span class="notranslate">GameMaker</span> em matrizes JSON, e estruturas <span class="notranslate">GameMaker</span> em objetos JSON.</p>
  <p>Ao utilizar esta função, há algumas coisas importantes a serem observadas:</p>
  <ul class="colour">
    <li>A função <em>não </em> converterá mapas DS, listas ou qualquer outra estrutura de dados em JSON, e simplesmente armazenará o valor do índice interno para a estrutura (que é de pouca utilidade, pois o índice mudará entre as execuções do jogo), e como tal
      você não deve tentar restringir qualquer valor que possa conter referências a estruturas de dados (para isso você tem <a href="json_encode.htm"><span class="inline">json_encode()</span></a>).</li>
    <li>A função converterá praticamente qualquer valor em uma string JSON &quot;válida&quot;, porém os valores reais contidos na string podem não ser exatamente o que você espera devido à forma como o padrão JSON opera:<br>
      <br> &quot;JSON é agnóstico sobre números. Em qualquer linguagem de programação, pode haver uma variedade de tipos de números de várias capacidades e complementos, fixos ou flutuantes, binários ou decimais. Isso pode fazer com que haja intercâmbio entre diferentes programações
      idiomas difíceis. O JSON, ao invés disso, oferece apenas a representação de números que os humanos usam: uma seqüência de dígitos. Todas as linguagens de programação sabem como fazer sentido das seqüências de dígitos mesmo que discordem nas representações internas&quot;.<br>
      <br> Para mais informações, consulte a <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">Norma</a> ECMA <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">JSON</a>.</li>
    <li>Se você incluir um int64 nos valores a converter para o JSON, ele o escreverá como um <i>int</i> se estiver no intervalo válido para um int32, como um <i>duplo</i> se puder fazê-lo sem perder precisão ou (se nenhum desses casos for aplicável) como uma <i>string</i> com um identificador &quot; @i64@<tt>&quot;</tt> antes dele e &quot; $i64$&quot; depois dele<tt>.</tt> Quando você vier a analisar novamente o JSON <span class="notranslate">GameMaker Studio 2</span> pegará esses identificadores e reconverterá o valor de volta para uma int64. Isto significa que
      que se o JSON for destinado a um servidor ou algum outro alvo que não seja o GameMaker, esses valores não serão apropriados e, portanto, devem ser evitados.</li>
    <li>Se você incluir <span class="inline">infinity</span>, <span class="inline">-infinity</span> ou <span class="inline">NaN</span> nos valores a serem convertidos ao JSON, eles serão codificados como cordas, pois esses valores não fazem parte do padrão JSON, e
      ao analisar o JSON resultante, eles <strong>não </strong>serão convertidos novamente em seus valores de <span class="notranslate">tempo de execução</span> e permanecerão como cordas. Observe que <span class="inline">NaN</span> será convertido em &quot;nan&quot; (minúsculas) após a stringificação.</li>
    <li>Deve-se tomar cuidado ao escrever qualquer string JSON devolvida para um arquivo <span class="inline">ini</span>, pois as especificações <span class="inline">ini</span> podem causar problemas ao usar citações e caracteres de escape. Veja a função <a href="../Ini_Files/ini_write_string.htm"><tt>ini_write_string()</tt></a>      para mais informações.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code"><code>json_stringify</code>(val)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>val</td>
        <td>O valor de referência para uma estrutura ou matriz a ser convertida em uma cadeia JSON</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">corda</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">var _contents = {<br> versão : &quot;1&quot;,<br> data: {<br> webSocket : 1,<br> ipv4Address : &quot;95.39.220.218&quot;,<br> ipv6Address : &quot;0000:0000:0000:0000:0000:ffff:5f27:dcda&quot;,<br> header
    : &quot;Você está recebendo um pacote&quot;,<br> body : &quot;Este pacote está vazio e somente para testes&quot;,<br> }, <br> };
    <br> packet = json_stringify(mapa);</p>
  <p>O código acima converterá a estrutura &quot;_contentes&quot; em uma string JSON e armazenará a string em uma variável. A cadeia real seria como esta:</p>
  <p class="code">{&quot;versão&quot;: &quot;1&quot;, &quot;myObj&quot;: { &quot;cabeçalho&quot;: &quot;Você está recebendo um pacote&quot;, &quot;webSocket&quot;: 1, &quot;body&quot;: &quot;Um pacote de queijo e batatas fritas de cebola&quot;, &quot;ipv4Address&quot;: &quot;95.39.220.218&quot;,
    &quot;ipv6Address&quot;: &quot;0000:0000:0000:0000:0000:ffff:5f27:dcda&quot; } }</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Encoding_And_Hashing.htm">Codificação de arquivos</a></div>
        <div style="float:right">Próximo: <a href="json_parse.htm">json_parse</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
json_stringify
-->
  <!-- TAGS
json_stringify
-->
</body>
</html>