<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>os_is_paused</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for os_is_paused" />
  <meta name="rh-index-keywords" content="os_is_paused" />
  <meta name="search-keywords" content="os_is_paused" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>os_is_paused</h1>
  <p>Ao desenvolver para dispositivos móveis, você precisa ter uma maneira de verificar se o dispositivo ainda está ou não focado em seu jogo, especialmente como se seu jogo estivesse em um dispositivo <span class="notranslate">iOS</span>, <span class="notranslate">Android</span> ou <span class="notranslate">Windows Phone</span>, então ele pode ser interrompido por chamadas telefônicas e outros aplicativos.
    Você pode usar esta função para verificar se o dispositivo está em pausa ou não.</p>
  <p>Vale notar que esta função executará qualquer código que esteja contido dentro do bloco de código nos dispositivos, mas então o <span class="notranslate">GameMaker Studio 2</span> será pausado imediatamente após, já que o dispositivo armazena o jogo como um processo de fundo. Portanto, se você tiver algo
    Como o código de exemplo fornecido abaixo, a instância a ser criada não aparecerá ou executará nenhum de seus eventos <i>até que o jogo tenha sido reiniciado do estado em cache</i>. Isto significa que você pode preferir que a função <tt>os_is_paused</tt> chame um alarme e depois no evento de alarme (que será definido quando o dispositivo for pausado, mas não será executado até que ele não seja pausado) crie um menu de pausa, reinicie a música etc...</p>
  <p>Se você estiver usando esta função nas plataformas <span class="notranslate">Windows</span>, <span class="notranslate">Ubuntu</span><span class="notranslate">(Linux</span>), MacOS ou HTML5, então a função só é alternada por <b>um passo</b> para a <tt>verdade</tt> quando o jogo perde o foco, e então ele retornará <tt>falso</tt> novamente até que o jogo seja devolvido.
    para se concentrar (e perde-o novamente). Isto porque estas plataformas não armazenam aplicativos e jogos, e assim estes continuarão a funcionar em segundo plano.</p>
  <p class="note"><b>NOTA</b>: Nos dispositivos móveis, os sons e a música serão interrompidos quando o os for pausado. Eles <b>não</b> serão reiniciados novamente, a menos que você os inicie especificamente com a função apropriada.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">os_is_paused()</p>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">Booleano</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">se os_is_paused()<br> {
    <br> if !instance_exists(obj_PauseMenu)<br> {
    <br> instance_create_layer(0, 0, &quot;Controllers&quot;, obj_PauseMenu);<br> }
    <br> }
  </p>
  <p>O código acima verifica se o jogo foi pausado, e se depois criou uma instância do objeto &quot;obj_PauseMenu&quot;, se já não existir nenhuma.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="OS_And_Compiler.htm">OS E Compilador</a></div>
        <div style="float:right">Próximo: <a href="os_is_network_connected.htm">os_is_network_connected</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
os_is_paused
-->
  <!-- TAGS
os_is_paused
-->
</body>
</html>