<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gml_release_mode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gml_release_mode" />
  <meta name="rh-index-keywords" content="gml_release_mode" />
  <meta name="search-keywords" content="gml_release_mode" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gml_release_mode</h1>
  <p>Quando seu jogo é compilado, ele também inclui certas funções internas para verificação de erros durante a execução. Estas verificações internas cobrem muitos aspectos de um código de jogo, incluindo intervalos, parâmetros e alguns aspectos gerais do compilador <span class="notranslate">GML</span> interno e são
    o que gera as mensagens de erro finais em muitos casos. No entanto, esta função pode ser usada para desligar estas verificações internas (ou seja: removê-las completamente do jogo compilado), dando um impulso de velocidade ao seu projeto final.</p>
  <p>Observe que isto significa que se você fizer algo em seu código de jogo que esteja incorreto, o jogo compilado <i>pode simplesmente travar</i>, ou pode experimentar algum <i>comportamento muito inesperado</i>. Por exemplo, se um <tt>DS Grid</tt> for acessado em um
    coordenada fora do tamanho definido, no modo desenvolvedor você receberia uma mensagem de erro da janela do compilador, mas as verificações no local permitiriam que o jogo continuasse a ser executado. Entretanto, no modo de liberação, estas verificações não estarão lá e, portanto, o código poderia
    devolver ou um ponteiro NULL, ou um mau ponteiro que, por sua vez, apontará para alguma memória aleatória. Assim, na melhor das hipóteses, você pode receber os dados errados de volta, ou na pior das hipóteses você pode sobrescrever algo na memória - dados, gráficos, ou até mesmo o próprio código. Outro exemplo
    seria na construção de primitivos - se você fornecer os dados de cor, posição, textura, etc... numa ordem diferente daquela que você definiu quando criou o formato de vértice, então o jogo poderá travar ou produzir resultados inesperados quando o modo de lançamento
    está ligado.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">gml_release_mode(flag);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>bandeira</td>
        <td>Seja <tt>verdadeiro</tt> para definir o modo de liberação ou falso para o desenvolvimento geral.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">gml_release_mode(true);</p>
  <p>O código de exemplo acima irá definir o jogo para usar o modo de lançamento quando compilado.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="OS_And_Compiler.htm">OS E Compilador</a></div>
        <div style="float:right">Próximo: <a href="gml_pragma.htm">gml_pragma</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
gml_release_mode
-->
  <!-- TAGS
gml_release_mode
-->
</body>
</html>