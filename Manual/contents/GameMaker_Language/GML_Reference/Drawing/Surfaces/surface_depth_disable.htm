<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>superfície_depth_disable</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for surface_depth_disable" />
  <meta name="rh-index-keywords" content="surface_depth_disable" />
  <meta name="search-keywords" content="surface_depth_disable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>superfície_depth_disable</h1>
  <p>Esta função desabilita a geração automática de buffer de profundidade para <i>todas as</i> superfícies que são criadas após ter sido desabilitada. Normalmente todas as superfícies têm amortecedores de profundidade, portanto, se você desenhar objetos 3D para elas, então ele irá classificá-las corretamente pela profundidade em
    a fim de manter a paridade funcional entre a renderização para superfícies e a renderização para o buffer traseiro, porém a alocação de buffers de profundidade essencialmente dobra a quantidade de memória necessária para superfícies, o que poderia ser uma sobrecarga excessiva e desnecessária
    especialmente se seu jogo for muito intenso em termos de memória, e para jogos 2D eles geralmente não são necessários.</p>
  <p>Para usar esta função você a chamaria <i>antes de</i> criar uma superfície, e então você pode ativá-la novamente depois (se necessário). Todas as superfícies criadas quando o buffer de profundidade é desativado deixarão de usar um buffer de profundidade ao serem atraídas, o que resulta
    nas coisas que estão sendo atraídas para a superfície tendo paridade de profundidade. As imagens abaixo ilustram isso na prática:</p>
  <p><img alt="Surface depth buffer example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/Surface_Depth_Buffer.png">Na imagem acima, estamos desenhando um retângulo e um triângulo usando um buffer de vértices em 3D. O
    coordenadas para o triângulo vermelho o coloca atrás do retângulo verde, mas o código para desenhar o triângulo é chamado <i>depois</i> do código para o retângulo, e quando o buffer de profundidade é ativado, o triângulo ainda é desenhado atrás do retângulo
    já que a profundidade 3D está sendo respeitada. Entretanto, quando desativamos o buffer de profundidade para a superfície, apenas a ordem de código é respeitada e assim o triângulo é desenhado sobre o retângulo.</p>
  <p class="note"><b>NOTA</b>: Para preservar corretamente a profundidade em 3D ao usar superfícies, não só é necessário ter o buffer de profundidade habilitado, mas também deve ter a escrita z e o teste z habilitados. Veja as funções <a href="../GPU_Control/gpu_get_ztestenable.htm"><tt><span style="font-size:14px;">gpu_set_ztestenable()</span></tt></a>    e <a href="../GPU_Control/gpu_get_zwriteenable.htm"><tt><span style="font-size:14px;">gpu_set_zwriteenable()</span></tt></a> para mais informações.</p>
  <p class="note"><b>NOTA</b>: Se seu jogo é 100% 2D ou se você sabe que não precisa de um buffer de profundidade superficial, então deve ser bom simplesmente chamar esta função uma vez no início do jogo para desativar o buffer.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">surface_depth_disable(disable);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>desativar</td>
        <td>Se definido como <tt>verdadeiro</tt>, o buffer de profundidade será desativado para superfícies criadas.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">var _depth_setting = surface_get_depth_disable();<br> surface_depth_disable(false);
    <br> surface_with_depth = surface_create(room_width, room_height);<br> surface_depth_disable(true);
    <br> surface_without_depth = surface_create(room_width, room_height);<br> surface_depth_disable(_depth_disable(_depth_setting));
  </p>
  <p>O código acima armazena a configuração atual do buffer de profundidade em uma variável e depois cria duas superfícies, uma com o buffer de profundidade ativado e outra sem, antes de restaurar a configuração original novamente.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Surfaces.htm">Superfícies</a></div>
        <div style="float:right">Próximo: <a href="surface_get_height.htm">altura_da_superfície</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
surface_depth_disable
-->
  <!-- TAGS
surface_depth_disable
-->
</body>
</html>