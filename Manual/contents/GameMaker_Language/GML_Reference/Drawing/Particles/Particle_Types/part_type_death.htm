<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>part_type_death</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for part_type_death" />
  <meta name="rh-index-keywords" content="part_type_death" />
  <meta name="search-keywords" content="part_type_death" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>part_type_death</h1>
  <p>Esta função pode ser usada para fazer sua partícula explodir outro tipo de partícula no final de sua vida útil.</p>
  <p class="note"><b>OBSERVAÇÃO</b>: NUNCA use o mesmo tipo de partícula, pois isso causará um loop infinito e pode travar o jogo em segundos! Além disso, tenha muito cuidado ao usar isso, pois pode aumentar muito o número de partículas na tela de cada vez e fazer com que seus jogos
    desacelerar visivelmente.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">part_type_death(ind, death_number, death_type);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>O índice do tipo de partícula a ser mudado.</td>
      </tr>
      <tr>
        <td>número_morte</td>
        <td>A quantidade da nova partícula a ser criada na morte da partícula. Se um valor negativo, em vez disso, criará uma fração de chance de criação (por exemplo -3 significaria que uma é criada a cada 3 ou mais passos).</td>
      </tr>
      <tr>
        <td>tipo_morte</td>
        <td>O índice do tipo de partícula a ser criada.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">part1 = part_type_create();<br> part_type_shape(part1, pt_shape_flare);<br> part_type_size(particle1, 0.20, 0.30, 0.50, 0);<br> part_type_scale(particle1, 0.10, 0.20);<br> part_type_colour3(particle1, 33023, 8454143, 33023);<br> part_type_alpha3(particle1,
    0,30, 0,50, 0);<br> part_type_speed(particle1, 0,40, 1, 0, 0, 0);<br> part_type_direction(particle1, 0, 359, 0, 20);<br> part_type_gravity(particle1, 0,20, 90);<br> part_type_orientation(particle1, 90, 90, 0, 0, 0, 1);<br> part_type_blend(particle1,
    1);<br> part_type_life(particle1, 1, 40);<br> particle2 = part_type_create();<br> part_type_shape(particle2, pt_shape_smoke);<br> part_type_size(particle2, 1, 1, 0, 0, 0);<br> part_type_scale(particle2, 0.50, 0.50);<br> part_type_colour1(particle2,
    12632256);<br> part_type_alpha3(particle2, 0.10, 0.40, 0);<br> part_type_speed(particle2, 0.50, 0.50, 0, 0, 0);<br> part_type_direction(particle2, 0, 359, 0, 0, 0);<br> part_type_gravity(particle2, 0.20, 90);<br> part_type_orientation(particle2, 0,
    359, 0, 1, 1);<br> part_type_blend(particle2, 0);<br> part_type_life(particle2, 60, 60);<br> part_type_death(particle1, 1, particle2);</p>
  <p>O código acima cria e define duas partículas e estabelece a partícula indexada na variável &quot;partícula1&quot; para criar 1 partícula de &quot;partícula2&quot; no final de sua vida útil.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Particle_Types.htm">Tipos de Partículas</a></div>
        <div style="float:right">Próximo: <a href="part_type_exists.htm">part_type_exists</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
part_type_death
-->
  <!-- TAGS
part_type_death
-->
</body>
</html>