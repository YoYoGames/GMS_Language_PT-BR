<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>part_type_step</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for part_type_step" />
  <meta name="rh-index-keywords" content="part_type_step" />
  <meta name="search-keywords" content="part_type_step" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>part_type_step</h1>
  <p>Esta função pode ser usada para fazer seu tipo de partícula fluir outro tipo a cada etapa até o final de sua vida útil. Você pode definir um valor negativo para o número da etapa e uma partícula será emitida em um intervalo aleatório com base nisso, de modo que, por exemplo,
    um valor de -3 terá uma chance de 1:3 de emitir uma partícula a cada passo.</p>
  <p class="note"><b>OBSERVAÇÃO</b>: NUNCA use o mesmo tipo de partícula, pois isso causará um loop infinito e pode travar o jogo em segundos! Além disso, tenha muito cuidado ao usar isso, pois pode aumentar muito o número de partículas na tela de cada vez e fazer com que seus jogos
    desacelerar visivelmente.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">part_type_step(ind, step_number, step_type);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>O índice do tipo de partícula a ser mudado.</td>
      </tr>
      <tr>
        <td>step_number</td>
        <td>A quantidade da nova partícula a ser criada por etapa.</td>
      </tr>
      <tr>
        <td>step_type</td>
        <td>O índice do tipo de partícula a ser criada.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">part2 = part_type_create();<br> part_type_shape(part2, pt_shape_smoke);<br> part_type_size(part2, 0.01, 0.01, 0.01, 0.01, 0.01, 0);<br> part_type_scale(particle2, 1, 1);<br> part_type_colour3(particle2, 4227327, 8454143, 4227327);<br> part_type_alpha3(particle2,1),
    0.50, 0.80);<br> part_type_speed(particle2, 0, 0, 0, 0, 0);<br> part_type_direction(particle2, 0, 359, 0, 0, 0);<br> part_type_gravity(particle2, 0, 270);<br> part_type_orientation(particle2, 0, 0, -2, 0, 1); <br> part_type_blend(particle2, 1);<br> part_type_life(particle2, 160, 160);<br> particle3 = part_type_create();<br> part_type_shape(particle3, pt_shape_flare);<br> part_type_size(particle3, 0, 0.20, 0.20, 0.02, 0);<br> part_type_scale(particle3, 1, 1);<br> part_type_colour3(particle3,
    16777215, 8454143, 16777215);<br> part_type_alpha3(particle3, 0, 0.50, 0);<br> part_type_speed(particle3, 3, 3, -0.03, 0);<br> part_type_direction(particle3, 0, 359, 0, 0, 0);<br> part_type_gravity(particle3, 0, 270);<br> part_type_orientation(particle3,
    0, 0, 0, 0, 0, 1);<br> part_type_blend(particle3, 1);<br> part_type_life(particle3, 40, 80);<br> part_type_step(particle2, 2, particle3);</p>
  <p>O código acima cria e define duas partículas e estabelece a partícula indexada na variável &quot;partícula2&quot; para criar 2 partículas de &quot;partícula3&quot; a cada etapa de sua vida útil.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Particle_Types.htm">Tipos de Partículas</a></div>
        <div style="float:right">A seguir: <a href="part_type_death.htm">part_type_death</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
part_type_step
-->
  <!-- TAGS
part_type_step
-->
</body>
</html>