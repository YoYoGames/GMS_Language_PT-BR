<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>teclado_set_map</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for keyboard_set_map" />
  <meta name="rh-index-keywords" content="keyboard_set_map" />
  <meta name="search-keywords" content="keyboard_set_map" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>teclado_set_map</h1>
  <p>Às vezes, ao fazer um jogo, você pode desejar que uma chave faça o mesmo que outra. Por exemplo, muitas pessoas usam as teclas WASD para movimento, mas depois muitas pessoas <i>também</i> usam as teclas de setas! Então, o que fazer? Bem, você <i>poderia</i> codificar o sistema de movimento
    duas vezes, mas isso é um pouco complicado e felizmente redundante, pois esta função permite &quot;mapear&quot; uma chave para outra e assim qualquer entrada de qualquer uma das chaves será interpretada como a mesma. Para fazer isso, você escolhe uma chave que deseja mapear (chave2
    - esta será a chave para a qual você escreverá o código) e uma chave <i>para a qual</i> você quer que ele seja mapeado (chave1). Depois disso, a chave pressionada para qualquer uma das chaves será interpretada pelo <span class="notranslate">GameMaker Studio 2</span> como vindo da chave2. Você também pode usar esta função para projetar
    um sistema onde o usuário pode definir suas próprias chaves para jogar simplesmente mapeando a chave de entrada do usuário para a chave que você codificou no jogo.</p>
  <p>A função toma um valor de código de chave como retornado pela função <a href="../../Strings/ord.htm"><tt>ord()</tt></a> (somente letras <i>maiúsculas</i> de A-Z ou números de 0-9), ou qualquer uma das constantes <tt>vk_*</tt> listadas na página principal de <a href="Keyboard_Input.htm">Entrada do Teclado</a>.</p>
  <p class="note"><strong>IMPORTANTE!</strong> A chave para a qual você está mapeando (key1) não será mais utilizável, pois ela é o verdadeiro símbolo da chave uma vez que você use esta função. Por exemplo, se você mapear a seta para cima para &quot;W&quot;, então você não será mais capaz de detectar a prensa
    da chave &quot;W&quot; como um &quot;W&quot;, será sempre considerado como a flecha de cima. Para desfazer isto, ou mapear a chave para si mesmo - assim tanto a chave1 como a chave2 seriam <span class="inline">ord(&quot;W&quot;)</span> - ou usar a função <span class="inline"><a href="keyboard_unset_map.htm">keyboard_unset_map()</a></span>.</p>
  <p> </p>
  <h4><b>Sintaxe:</b></h4>
  <p class="code">keyboard_set_map(key1, key2);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>chave1</td>
        <td>Esta é a chave para a qual a chave1 deve ser mapeada</td>
      </tr>
      <tr>
        <td>chave2</td>
        <td>Esta é a chave que deve ser mapeada</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4><b>Devoluções:</b></h4>
  <p class="code">Booleano</p>
  <p> </p>
  <h4><b>Exemplo:</b></h4>
  <p class="code">keyboard_set_map(ord(&quot;A&quot;), vk_left);</p>
  <p>O código do exemplo acima irá mapear a tecla &quot;A&quot; para a seta para a esquerda. Isto significa que o jogador pode usar tanto a tecla &quot;A&quot; quanto a seta <i>para a esquerda</i>, e que todo código escrito para a seta para a esquerda também responderá à tecla &quot;A&quot;.
    que está sendo usada em seu lugar.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Keyboard_Input.htm">Entrada de Teclado</a></div>
        <div style="float:right">Próximo: <a href="keyboard_get_map.htm">keyboard_get_map</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
keyboard_set_map
-->
  <!-- TAGS
keyboard_set_map
-->
</body>
</html>