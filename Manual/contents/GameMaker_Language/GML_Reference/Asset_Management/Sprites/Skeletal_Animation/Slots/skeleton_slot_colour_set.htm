<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>conjunto_esqueleto_de_squema_cores</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_slot_colour_set" />
  <meta name="rh-index-keywords" content="skeleton_slot_colour_set" />
  <meta name="search-keywords" content="skeleton_slot_colour_set,skeleton_slot_color_set" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>conjunto_esqueleto_de_squema_cores</h1>
  <p>Com esta função você pode definir uma cor e um alfa da ranhura de fixação para que todos os sprites ligados a ela sejam desenhados com estes valores de mistura. Tenha em mente que o exemplo sprite pode ter uma cor de mistura e um ajuste alfa (<a href="../../Sprite_Instance_Variables/image_blend.htm"><tt>image_blend</tt></a> e
    <a href="../../Sprite_Instance_Variables/image_angle.htm"><tt>image_alpha</tt></a>), assim como o anexo (ver a função <a href="../Attachments/skeleton_attachment_create_colour.htm"><tt>esqueleto_criar_cores()</tt></a>), e assim o
    cor final e alfa que o duende de fixação designado para o slot terá será um composto de todos esses valores.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">esqueleto_squema_de_cores(ranhura, cor, alfa);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>ranhura</td>
        <td>O nome da ranhura a definir, um fio</td>
      </tr>
      <tr>
        <td>cor</td>
        <td>A cor a ser definida, seja um número inteiro, uma constante ou um valor hexadecimal.</td>
      </tr>
      <tr>
        <td>alfa</td>
        <td>O alfa para definir de 0 a 1.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">slot_list = ds_list_create();<br> skeleton_find_slot(mouse_x, mouse_y, slot_list);<br> if !ds_list_empty(slot_list)<br> {
    <br> para (var i = 0; i &lt; ds_list_size(slot_list); ++i;) <br> {
    <br> if skeleton_slot_colour_get(slot_list[| i]) != c_white<br> {
    <br> skeleton_slot_colour_set(slot_list[| i], c_white, 1);<br> }
    <br> }
    <br> }
  </p>
  <p>O código acima cria uma lista DS e depois a preenche com os nomes dos slots encontrados na posição do mouse na sala. Em seguida, ele percorre a lista de slots e repõe a cor dos slots encontrados para branco com um alfa de 1 se a cor não for
    já branco.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Slots.htm">Slots</a></div>
        <div style="float:right">A seguir: <a href="skeleton_slot_colour_get.htm">esqueleto_esqueleto_cor_esqueleto</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_slot_colour_set
skeleton_slot_color_set
-->
  <!-- TAGS
skeleton_slot_colour_set
-->
</body>
</html>