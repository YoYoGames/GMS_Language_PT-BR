<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Animação do esqueleto</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different Skeletal Animation functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Skeletal Animation,gm_SpineTintBlackColour,tint black,Spine" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Sprites de Animação Esquelética</h1>
  <p>As funções encontradas nesta seção são <i>apenas</i> para uso com sprites que tenham sido importados de um arquivo de animação esquelético (especificamente, os arquivos JSON que <a href="http://es.esotericsoftware.com/"><b>Lombada</b></a> exportação)
    e pode ser usado para obter informações sobre um ativo de animação em seu jogo, bem como para definir certas propriedades dentro de uma animação. Estas funções podem ser usadas juntamente com as funções e variáveis regulares do sprite, permitindo-lhe (por exemplo)
    misture duas animações de esqueleto usando estas funções especiais e, ao mesmo tempo, defina a escala da imagem usando as variáveis normais da instância sprite (para mais informações sobre as variáveis da instância sprite, veja <a href="../Sprite_Instance_Variables/Sprite_Instance_Variables.htm">aqui</a>).</p>
  <p class="note"><b>NOTA</b>: Para maiores informações sobre importação de sprites de animação esquelética feitos com Espinha, consulte a seção <a href="../../../../../Settings/Texture_Information/Non-Bitmap_Sprites.htm">Importando Sprites Não-Bitmap</a>.</p>
  <p>Você pode saber mais sobre as funções para estes tipos de sprites nas seções abaixo:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="Animation/Animation.htm"><label for="a">Animação</label></a></li>
    <li><a href="Skins/Skins.htm"><label for="b">Peles</label></a></li>
    <li><a href="Attachments/Attachments.htm"><label for="c">Anexos</label></a></li>
    <li><a href="Bones/Bones.htm"><label for="d">Bones</label></a></li>
    <li><a href="Slots/Slots.htm"><label for="f">Caça-níqueis</label></a></li>
    <li><a href="Drawing_And_Miscellaneous/Drawing_And_Miscellaneous.htm"><label for="e">Desenho e Diversos</label></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <h2>Suporte Tint Black</h2>
  <p>Esta característica permite que as áreas escuras das ranhuras da Coluna vertebral sejam coloridas de forma diferente das áreas claras (esta é uma característica da IDE da Coluna vertebral, veja a seção <b>Tint black</b> <a href="http://esotericsoftware.com/spine-attachments" target="_blank">aqui</a> mais detalhes). Atualmente, para fazer uso deste recurso no <span class="notranslate">GameMaker Studio 2</span>, você deve usar um <a href="../../../../../The_Asset_Editors/Shaders.htm"><span class="notranslate">shader</span></a> quando
    desenhando um duende de espinha que o utiliza. Este <span class="notranslate">shader</span> contém uma variável uniforme global chamada &quot; gm_SpineTintBlackColour<tt>&quot;</tt> que o corredor preenche com a cor preta de lata atual, recuperada automaticamente dos dados da Coluna vertebral. O <span class="notranslate">sombreador</span>
    necessário é mostrado abaixo:</p>
  <p>O Vertex <span class="notranslate">Shader</span> (este é o mesmo que o vertex <span class="notranslate">shader</span> padrão de passagem)</p>
  <p class="code">atributo vec3 in_Position; // (x,y,z)<br> atributo vec4 in_Colour; // (r,g,b,a)<br> atributo vec2 in_TextureCoord; // (u,v)<br>
    <br> variando vec2 v_vTexcoord;<br> variando vec4 v_vColour;<br>
    <br> void main()<br> {
    <br> vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0);<br> gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos;<br> v_vColour = in_Colour;<br> v_vTexcoord = in_TextureCoord;<br> }
  </p>
  <p>O Fragment <span class="notranslate">Shader</span>:</p>
  <p class="code">variando vec2 v_vTexcoord;<br> variando vec4 v_vColour;<br>
    <br> uniforme vec4 gm_SpineTintBlackColour; // Este é o uniforme que contém a cor preta de lata<br>
    <br> void main()<br> {
    <br> vec4 tb = gm_SpineTintBlackColour;<br> vec4 texcol = text2D( gm_BaseTexture, v_vTexcoord );<br> vec4 outcol;<br> outcol.rgb = v_vColour.rgb * texcol.rgb;<br> outcol.rgb += tb.rgb * ((tb.a * (texcol.a - 1.0)) + (1.0 - texcol.rgb)); //
    Esta linha realiza a lógica de mistura de lata preta<br> outcol.a = v_vColour.a * texcol.a;<br> gl_FragColor = outcol;<br> }
  </p>
  <p>Você usaria isto primeiro chamando o <span class="notranslate">sombreador</span>, depois desenhando o duende, depois reiniciando o <span class="notranslate">sombreador</span>, algo como isto:</p>
  <p class="code"><span class="notranslate">shader_set</span>(shd_spine_tint_tint_black);<br> draw_self();
    <br> <span class="notranslate">shader_reset</span>();
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Sprites.htm">Sprites</a></div>
        <div style="float:right">A seguir: <a href="../Sprite_Information/Sprite_Information.htm"><label for="three">Informações Sprite</label></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Spine Sprites
Spine
Skeleton Animation Sprites
gm_SpineTintBlackColour
tint black
-->
  <!-- TAGS
sprite_spìne_functions
-->
</body>
</html>