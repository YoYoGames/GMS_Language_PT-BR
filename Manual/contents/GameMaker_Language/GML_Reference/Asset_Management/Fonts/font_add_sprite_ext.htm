<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>font_add_sprite_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function font_add_sprite_ext" />
  <meta name="rh-index-keywords" content="font_add_sprite_ext" />
  <meta name="search-keywords" content="font_add_sprite_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>font_add_sprite_ext</h1>
  <p>Com esta função você pode usar uma &quot;faixa de sprite&quot; (o sprite em si deve ser um ativo <b>sprite</b> do Navegador de Ativos, ou um sprite que você adicionou aos recursos do jogo usando o sprite_add <tt>) para</tt> criar um novo ativo de fonte, onde cada subimagem
    seria um símbolo ou letra individual. Ao contrário do normal, o <a href="font_add_sprite.htm"><tt>font_add_sprite()</tt></a> que tem uma ordem específica para as sub-imagens do duende, esta função mapeará as sub-imagens do duende com base no argumento
    &quot;string_map&quot; da função. Este argumento é uma string que você pode usar para dizer ao <span class="notranslate">GameMaker Studio 2</span> qual a ordem das sub-imagens da fonte sprite e ele as mapeará automaticamente ao escrever o texto. Assim, por exemplo, se você tiver um "string-map" (mapa de strings)
    de &quot;AaBbccDdEeFfGgHh&quot;, sua fonte sprite deve ter <i>as</i> subimagens ordenadas desta forma. Você pode definir &quot;espaço&quot; como sendo qualquer caractere que você queira, por exemplo uma única linha do tamanho que você quer que o espaço seja, e todos os espaços
    no texto será renderizada nessa largura (mas a imagem escolhida <i>nunca</i> será renderizada), ou se você não fornecer um duende por espaço, então a largura do caractere mais largo na fonte do duende será usada em seu lugar.</p>
  <p>Você também pode definir o espaçamento para que a fonte seja proporcional<tt>(verdadeira</tt>) ou não<tt>(falsa</tt>), onde uma fonte proporcional é espaçada com base na largura real das letras (assim, a letra &quot;i&quot; ocupa menos espaço do que a letra &quot;w&quot;,
    por exemplo), enquanto uma fonte não proporcional será espaçada com base na largura da subimagem, como uma fonte monoespaçada. Finalmente, você pode definir o espaço a ser deixado entre cada letra ao escrever, e este pode ser qualquer valor inteiro, sendo que 0 não é espaço (a letra "w", por exemplo).
    letras &quot;tocarão&quot; se forem proporcionais). A função retorna um valor de <i>índice</i> que deve ser armazenado em uma variável, pois isso será necessário em todos os outros códigos que se referem a essa fonte, ou retornará -1 se a função falhar para qualquer
    razão.</p>
  <p>Vale a pena notar que para que as funções de alinhamento de fontes funcionem (como <a href="../../Drawing/Text/draw_set_halign.htm"><tt>draw_set_halign()</tt></a>) então o font sprite deve ter sua origem definida no <i>canto superior esquerdo</i>. Se você usar outros valores
    então você precisará levar em consideração a compensação de origem ao desenhar o texto usando a fonte.</p>
  <p class="note"><b>NOTA: </b>Quando você carrega uma fonte no <span class="notranslate">GameMaker Studio 2</span> você deve se lembrar de removê-la novamente (com <span style="font-size:1px;"><a href="font_delete.htm"><tt style="font-size: 14px">font_delete()</tt></a></span>) quando não é mais necessário, caso contrário
    é o risco de um vazamento de memória que irá diminuir a velocidade e, eventualmente, quebrar seu jogo.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">font_add_sprite_ext(spr, string_map, prop, sep);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>spr</td>
        <td>O duende para adicionar uma fonte baseada em.</td>
      </tr>
      <tr>
        <td>string_map</td>
        <td>Corda da qual é tirada a ordem de subimagem sprite.</td>
      </tr>
      <tr>
        <td>adereço</td>
        <td>Definir como fonte proporcional ou não.</td>
      </tr>
      <tr>
        <td>sep</td>
        <td>O espaço a ser deixado entre cada carta.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">global.Font = font_add_sprite_ext(spr_CalcFont, &quot;0123456789+-*/=&quot;, true, 2);</p>
  <p>O código acima criará um novo recurso de fonte a partir da variável &quot;spr_CalcFont&quot; e armazenará o índice da nova fonte na variável &quot;global.Font&quot;. As sub-imagens da fonte sprite serão mapeadas para a string
    especificado.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Fonts.htm">Fontes</a></div>
        <div style="float:right">Próximo: <a href="font_replace.htm">font_replace</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
font_add_sprite_ext
-->
  <!-- TAGS
font_add_sprite_ext
-->
</body>
</html>