<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_emitter_velocity</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_emitter_velocity" />
  <meta name="rh-index-keywords" content="audio_emitter_velocity" />
  <meta name="search-keywords" content="audio_emitter_velocity" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_emitter_velocity</h1>
  <p>Esta função pode ser usada para dar um efeito <em>Doppler </em>emissor e simular o movimento de áudio baseado no vetor que é resolvido a partir das posições relativas x, y e z. Se o emissor em si não vai se mover, você normalmente não
    precisa definir estes valores, mas, por exemplo, se você estiver fazendo um jogo de tiro rolante em que os inimigos vêm da direita e rolam para a esquerda, você definiria isto para ter uma velocidade de (hspeed, 0, 0) no evento de criação dos inimigos (e atualizar
    o emissor de cada instância no evento da etapa usando <a href="audio_emitter_position.htm"><tt>audio_emitter_position()</tt></a>) para dar a qualquer som emitido pelas instâncias inimigas o Doppler correto ao passarem pela instância do jogador (que, por sua vez
    estaria usando a função <a href="../Audio_Listeners/audio_listener_position.htm"><tt>audio_listener_position()</tt></a> para colocar o <i>ouvinte</i> na posição correta).</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">audio_emitter_velocity(emissor, vx, vy, vz);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>emissora</td>
        <td>O índice do emissor a mudar.</td>
      </tr>
      <tr>
        <td>vx</td>
        <td>O valor vetorial x (padrão 0).</td>
      </tr>
      <tr>
        <td>vy</td>
        <td>O valor do vetor y (padrão 0).</td>
      </tr>
      <tr>
        <td>vz</td>
        <td>O valor z vetorial (padrão 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">s_emit = audio_emitter_create();<br> audio_emitter_position(s_emit, room_width, 0, 0);<br> audio_emitter_velocity(s_emit, -5, 0, 0, 0);</p>
  <p>O código acima cria um emissor de áudio e atribui seu índice à variável &quot;s_emit&quot;. Este emissor é então colocado em uma posição dentro da sala e recebe uma velocidade de 5 pixels por degrau ao longo do eixo x (ele Doppler será corretamente Doppler em relação
    ao ouvinte como se ele tivesse uma velocidade horizontal de 5 pixels por passo).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Audio_Emitters.htm">Emissores de áudio</a></div>
        <div style="float:right">Próximo: <a href="audio_emitter_falloff.htm">audio_emitter_falloff</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
audio_emitter_velocity
-->
  <!-- TAGS
audio_emitter_velocity
-->
</body>
</html>