<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>layer_script_end_end</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_script_end" />
  <meta name="rh-index-keywords" content="layer_script_end" />
  <meta name="search-keywords" content="layer_script_end" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>layer_script_end_end</h1>
  <p>Com esta função você pode atribuir uma <a href="../../../../GML_Overview/Script_Functions.htm">função de roteiro</a> a uma camada e ela será chamada depois que a camada for renderizada. Ao adicionar uma função a uma camada desta maneira, ela será executada no final de
   <i>cada um dos diferentes eventos de sorteio</i> para que você possa verificar na função atribuída qual evento está atualmente terminado de renderizar e adaptar o código para se adequar. Isto pode ser feito verificando a função <a href="../../Objects/Object_Events/event_type.htm"><tt>tipo_de_evento</tt></a>    e/ou o <a href="../../Objects/Object_Events/event_number.htm"><tt>número_do_evento</tt></a> (ver o exemplo ampliado abaixo). Observe que a função <i>não</i> se destina a ser chamada em nenhum evento de sorteio ou evento de etapa, mas apenas precisa ser chamada
    no início da sala no <strong>Código de Criação de Sala</strong> ou no <strong>Criar Evento </strong>/ <strong>Início de Sala Evento</strong> de uma instância.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">layer_script_end(layer_id, script)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>layer_id</td>
        <td>O valor de identificação único da camada a ser alvo (ou o nome da camada como uma corda)</td>
      </tr>
      <tr>
        <td>roteiro</td>
        <td>O índice de função do roteiro a ser atribuído à camada</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemplo ampliado:</h4>
  <p>Neste exemplo estendido, mostraremos primeiro como uma simples função de script é estruturada para definir alguns dados uniformes de <span class="notranslate">sombreador</span> de modo que, quando a camada dada for desenhada, esta função será executada e o <span class="notranslate">sombreador</span> funcionará corretamente. No exemplo, vale a pena
    observando como verificamos qual evento está sendo chamado para que o resto da função seja executado apenas no evento específico que exigimos que seja trabalhado - neste caso, apenas no evento principal de sorteio:</p>
  <p class="code">//// @function layer_shader_start();<br> function layer_shader_start()
    <br> {
    <br> if event_type == ev_draw<br> {
    <br> se event_number == 0<br> {
    <br> colour_to_find = <span class="notranslate">shader_get_uniform</span>(sShaderDemo5, &quot;f_Colour1&quot;);<br> colour_to_set = shader_get_uniform(sShaderDemo5<span class="notranslate">, &quot;f_Colour2</span>&quot;);<br> shader_set(s_ColourChanger);
    <br> <span class="notranslate">shader_set_uniform_f</span>(color_to_find, 1,1,1 );<br> <span class="notranslate">shader_set_uniform_f</span>(color_to_set, 1,0,0 );<br> }
    <br> }
    <br> }
  </p>
  <p>Teríamos então uma função companheira para reiniciar o <span class="notranslate">sombreador</span> depois de todo o desenho ter sido feito:</p>
  <p class="code">//// @function layer_shader_end();<br> function layer_shader_end()
    <br> {
    <br> if event_type == ev_draw<br> {
    <br> se event_number == 0<br> {
    <br> <span class="notranslate">shader_reset</span>();
    <br> }
    <br> }
    <br> }
  </p>
  <p>Agora que definimos nossas funções de roteiro para definir o <span class="notranslate">sombreador</span>, temos então que atribuí-las a uma camada específica para que a camada saiba chamá-las. Isto seria feito no código de criação da sala, ou no evento de criação ou início da sala de alguns
    objeto controlador (eles não precisam ser definidos a cada passo, mas sim uma vez no início da sala, ou quando a camada é inicialmente criada):</p>
  <p class="code">var lay_id = layer_get_id(&quot;Instâncias&quot;);<br> layer_script_begin(lay_id, layer_shader_start<span class="notranslate">);</span><br> layer_script_end(lay_id, layer_shader_end<span class="notranslate">)</span>;</p>
  <p>Este bloco de código final atribui os scripts à camada.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="General_Layer_Functions.htm">Funções gerais da camada</a></div>
        <div style="float:right">Próximo: <a href="layer_shader.htm">layer_shader</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
layer_script_end
-->
  <!-- TAGS
layer_script_end
-->
</body>
</html>