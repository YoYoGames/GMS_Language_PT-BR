<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_upload_buffer_score_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for steam_upload_score_buffer" />
  <meta name="rh-index-keywords" content="steam_upload_score_buffer" />
  <meta name="search-keywords" content="steam_upload_score_buffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">steam_upload_buffer_score_buffer</span></h1>
  <p>Esta função enviará uma pontuação para o quadro de líderes dado juntamente com um pacote de dados criado a partir de um buffer. O buffer não deve ter mais do que 256 bytes de tamanho - qualquer coisa além disso será cortada - e pode conter quaisquer dados que você precisar. A pontuação
    a ser carregado deve ser um número real, e o nome do quadro de líderes é uma string que foi definida quando você criou o quadro de líderes usando a função <a href="steam_create_leaderboard.htm"><tt><span class="notranslate">steam_create_leaderboard</span>()</tt></a>.</p>
  <p>Se a função falhar, ele retornará um valor de -1, enquanto um post bem sucedido retornará uma identificação única para o upload e acionará um <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm">Evento<span class="notranslate">de Vapor</span></a> Assíncrono. Este evento
    criará um <tt>Mapa DS</tt> na variável embutida <tt>async_load</tt> com os seguintes pares chave/valor:</p>
  <ul class="colour">
    <li>&quot;event_type<b>&quot; -</b> Esta chave conterá o valor &quot; leaderboard_upload<b>&quot; quando</b> acionado por esta função</li>
    <li>&quot; lb_name<b>&quot; -</b> Esta chave contém o nome do quadro de líderes que foi afixado</li>
    <li>&quot;<b>sucesso&quot; -</b> Será 1 se o cargo tiver sucesso, 0 falhou</li>
    <li>&quot;<b>atualizado&quot; -</b> Será 1 se a pontuação do quadro de líderes foi realmente atualizada (ou seja: a nova pontuação foi melhor) ou 0 caso contrário. Observe que se a pontuação for atualizada, os dados do buffer carregado também não serão adicionados.</li>
    <li>&quot;post_id<b>&quot; -</b> Esta chave deve corresponder ao valor de identificação retornado pela chamada de upload</li>
    <li>&quot;pontuação<b>&quot; -</b> Esta chave contém a pontuação que foi afixada</li>
  </ul>
  <p>Note que ao baixar o quadro de líderes, a chave &quot;entradas&quot; do <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> mapa terá agora uma chave de &quot;dados&quot; para que você possa recuperar o
    buffer de dados carregados (veja o exemplo de código estendido de <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm">eventos<span class="notranslate">a vapor</span></a> para mais detalhes). Este buffer de dados será <b>codificado na Base 64</b> e, portanto, você precisará usar
    a função <a href="../../Buffers/buffer_base64_decode.htm"><tt>buffer_base64_decode()</tt></a> sobre os dados antes da leitura a partir do buffer.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code"><span class="notranslate">steam_upload_buffer_score_buffer</span>(lb_name, score, buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td>lb_nome</td>
        <td>O nome do quadro de líderes para o qual você está carregando as pontuações (um fio).</td>
      </tr>
      <tr>
        <td>pontuação</td>
        <td>A pontuação a ser carregada (um número real).</td>
      </tr>
      <tr>
        <td>tampão</td>
        <td>A identificação do buffer a anexar.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemplo ampliado:</h4>
  <p>Neste exemplo, primeiro carregamos uma pontuação e depois analisamos o mapa <tt>async_load</tt> retornado, se bem-sucedido. O código abaixo mostra um exemplo típico de upload, com um buffer sendo criado para manter uma string que nos diz qual o nível em que a pontuação foi carregada
    de:</p>
  <p class="code">se (hp &lt;= 0)<br> {
    <br> var buff = buffer_create(256, buffer_fixed, 1 );<br> buffer_write(buff, buffer_string, &quot;Uploaded on level &quot; + string(global.Level));<br> upload_ID = steam_upload_score(&quot;Game Scores&quot;, score, buff);<br> se
    (!upload_ID)<br> {
    <br> alarm[0] = room_speed;<br> }
    <br> buffer_delete(buff);
    <br> }
  </p>
  <p>Observe que colocamos um alarme se a chamada falhar. Isto seria usado para tentar o upload novamente em um momento posterior e você pode adicionar lá um código extra para tentar novamente o upload ou para salvar a pontuação em um arquivo de texto caso ele continue a falhar, etc... Observe também que nós
    eliminar imediatamente o buffer, pois ele não é mais necessário para a função. Agora adicionamos o seguinte no <b>evento<span class="notranslate">Steam</span></b> async para a instância que controla as pontuações:</p>
  <p class="code">var type = ds_map_find_value(async_load, &quot;event_type&quot;);<br> if (type == &quot;leaderboard_upload&quot;)<br> {
    <br> var lb_ID = ds_map_find_value(async_load, &quot;post_id&quot;);<br> if lb_ID == upload_ID<br> {
    <br> var lb_name = ds_map_find_value(async_load, &quot;lb_name&quot;);<br> var lb_done = ds_map_find_value(async_load, &quot;success&quot;);<br> var lb_score = ds_map_find_value(async_load, &quot;score&quot;);<br> var
    lb_updated = ds_map_find_value(async_load, &quot;updated&quot;);<br> show_debug_message(&quot;leaderboard post id:&quot; + string(lb_ID) + &quot; to lb:&quot; + string(lb_name) + &quot; with score:&quot; + string(lb_score) + &quot; updated=&quot;
    + string(lb_updated));<br> if (lb_done)<br> {
    <br> show_debug_message(&quot;- Sucedido&quot;);<br> }
    <br> mais
    <br> {
    <br> show_debug_message(&quot;- Failed&quot;);<br> }
    <br> }
    <br> }
  </p>
  <p>No exemplo, estamos simplesmente emitindo os valores de retorno para a janela do compilador como mensagens de depuração, mas você pode usar este evento para lidar com as informações da maneira que quiser.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Steam_Leaderboards.htm">Painéis de Liderança</a></div>
        <div style="float:right">Próximo: <a href="steam_download_scores.htm"><span class="notranslate">vapor_download_scores</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">steam</span>_upload_score_buffer
-->
  <!-- TAGS
<span class="notranslate">steam</span>_upload_score_buffer
-->
</body>
</html>