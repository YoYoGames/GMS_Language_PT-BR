<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Coleta de Lixo</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Garbage Collection functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Garbage Collection" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Coleta de Lixo</h1>
  <p>O <span class="notranslate">GameMaker Studio 2</span> <strong>Garbage Collector</strong> existe porque os métodos podem ser passados na pilha e deixados sem referência, assim como as estruturas e algumas outras coisas, que por sua vez causariam um vazamento de memória se não fossem &quot;limpos&quot;.
    de alguma forma. É aqui que entra o coletor de lixo e ele correrá no fundo do jogo, coletando qualquer coisa que tenha sido desreferenciada e mantendo um ótimo uso de memória. Quando falamos de algo que está sendo desreferenciado, nós
    geralmente referem-se a qualquer estrutura ou função que não esteja conectada (não precisa estar diretamente, mas através de uma cadeia de outras variáveis) a uma <strong>variável </strong>global ou a uma <strong>variável de instância de</strong> objeto. Observe também que
    funções definidas em scripts na IDE também não são coletadas, uma vez que elas são implicitamente tornadas globais.</p>
  <p class="note"><b>NOTA</b>: Note que coisas como superfícies, estruturas de dados, amortecedores e outros recursos dinâmicos <b>não</b> são coletados e têm suas próprias funções de <tt>destruição</tt> para limpar a memória associada a eles. Como regra geral,
    se qualquer coisa que você criar em tempo de execução tiver uma função de <tt>destruição</tt>, então não será coletado lixo e você mesmo terá que lidar com ele em código. As exceções a isto são seqüências, curvas de animação e instâncias, que também requerem
    o catador de lixo, <b>mas ainda precisa ter sua função destrutiva chamada</b>.</p>
  <p>A coleta de lixo que o <span class="notranslate">GameMaker Studio 2</span> utiliza é &quot;geracional&quot;. Isto significa que, a fim de reduzir o trabalho que deve ser feito em cada quadro, os objetos são divididos em &quot;gerações&quot;. Novos objetos são criados na geração 0 e
    eles são movidos para gerações mais velhas à medida que envelhecem. A idéia geral é que os objetos que permanecem por um tempo não precisam ser testados continuamente para ver se devem ser apagados, mas podem ser verificados com menos freqüência (note que &quot;objetos&quot; são os objetos que não são removidos).
    aqui se refere a qualquer coisa que possa ser coletada e <i>não</i> instâncias de objetos em geral, como definido no Navegador de Ativos). Observe que enquanto o sistema de verificação é geracional, as verificações reais são feitas de forma &quot;incremental&quot;, tais
    que em vez de limpar potencialmente milhares de objetos de uma geração em um único quadro - causando um grande pico no uso da CPU e afetando potencialmente a jogabilidade - cada geração será verificada e, se necessário, a limpeza será espalhada
    em vários quadros para que o coletor de lixo funcione com mais freqüência, mas trabalhe menos cada quadro que está coletando (você pode definir o tempo que o coletor de lixo deve gastar em cada quadro usando a função <span class="inline"><a href="gc_target_frame_time.htm">gc_target_frame_time()</a></span>).</p>
  <p>Em geral, você nunca deve precisar interagir com o sistema de coleta de lixo <span class="notranslate">GameMaker Studio 2</span> e normalmente os resultados de seu funcionamento não são visíveis, mas alguns comandos <span class="notranslate">GML</span> estão disponíveis para obter informações sobre o que o coletor está fazendo e
    para influenciar seu comportamento de forma limitada.</p>
  <p class="note"><b>IMPORTANTE!</b> Note que no HTML5 a coleta de lixo da plataforma alvo é tratada pelo mecanismo JavaScript e, portanto, nenhuma das funções listadas abaixo afetará seu funcionamento e a função <tt>gc_get_stats()</tt> retornará 0 para todos
    campos.</p>
  <p> </p>
  <ul class="colour">
    <li><a href="gc_enable.htm">gc_enable</a></li>
    <li><a href="gc_is_enabled.htm">gc_is_enabled</a></li>
    <li><a href="gc_collect.htm">gc_collect</a></li>
    <li><a href="gc_target_frame_time.htm">gc_target_frame_time</a></li>
    <li><a href="gc_get_target_frame_time.htm"><span>gc_get_target_frame_time</span></a></li>
    <li><a href="gc_get_stats.htm">gc_get_stats</a></li>
  </ul>
  <p> </p>
  <p>Para ajudar a decidir o que precisa de lixo coletado e quando você também tem algumas funções que podem ser usadas para criar e verificar <strong>referências fracas</strong> a estruturas. Uma referência fraca é uma referência que não protege o objeto referenciado da coleta
    por um coletor de lixo, e assim pode ser usado para verificar se uma estrutura ainda está &quot;viva&quot; (referenciada) ou não em algum lugar do jogo. As funções disponíveis para referenciamento fraco são:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="weak_ref_create.htm">Ref_ref_create fraco</a></li>
    <li><a href="weak_ref_alive.htm">fraco_ref_alive</a></li>
    <li><a href="weak_ref_any_alive.htm">Ref_ref_uma_alive_baixa</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../GML_Reference.htm">Referência<span class="notranslate">GML</span></a></div>
        <div style="float:right">A seguir: <a href="../Variable_Functions/Variable_Functions.htm">Funções variáveis</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">GML</span> Reference
-->
  <!-- TAGS
gml_reference
-->
</body>
</html>