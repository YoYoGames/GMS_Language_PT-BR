
  
  Coleta de Lixo
  O GameMaker Studio 2 Garbage Collector existe porque os métodos podem ser passados na pilha e deixados sem referência, assim como as estruturas e algumas outras coisas, que por sua vez causariam um vazamento de memória se não fossem "limpos".
    de alguma forma. É aqui que entra o coletor de lixo e ele correrá no fundo do jogo, coletando qualquer coisa que tenha sido desreferenciada e mantendo um ótimo uso de memória. Quando falamos de algo que está sendo desreferenciado, nós
    geralmente referem-se a qualquer estrutura ou função que não esteja conectada (não precisa estar diretamente, mas através de uma cadeia de outras variáveis) a uma variável global ou a uma variável de instância de objeto. Observe também que
    funções definidas em scripts na IDE também não são coletadas, uma vez que elas são implicitamente tornadas globais.
  NOTA: Note que coisas como superfícies, estruturas de dados, amortecedores e outros recursos dinâmicos não são coletados e têm suas próprias funções de destruição para limpar a memória associada a eles. Como regra geral,
    se qualquer coisa que você criar em tempo de execução tiver uma função de destruição, então não será coletado lixo e você mesmo terá que lidar com ele em código. As exceções a isto são seqüências, curvas de animação e instâncias, que também requerem
    o catador de lixo, mas ainda precisa ter sua função destrutiva chamada.
  A coleta de lixo que o GameMaker Studio 2 utiliza é "geracional". Isto significa que, a fim de reduzir o trabalho que deve ser feito em cada quadro, os objetos são divididos em "gerações". Novos objetos são criados na geração 0 e
    eles são movidos para gerações mais velhas à medida que envelhecem. A idéia geral é que os objetos que permanecem por um tempo não precisam ser testados continuamente para ver se devem ser apagados, mas podem ser verificados com menos freqüência (note que "objetos" são os objetos que não são removidos).
    aqui se refere a qualquer coisa que possa ser coletada e não instâncias de objetos em geral, como definido no Navegador de Ativos). Observe que enquanto o sistema de verificação é geracional, as verificações reais são feitas de forma "incremental", tais
    que em vez de limpar potencialmente milhares de objetos de uma geração em um único quadro - causando um grande pico no uso da CPU e afetando potencialmente a jogabilidade - cada geração será verificada e, se necessário, a limpeza será espalhada
    em vários quadros para que o coletor de lixo funcione com mais freqüência, mas trabalhe menos cada quadro que está coletando (você pode definir o tempo que o coletor de lixo deve gastar em cada quadro usando a função gc_target_frame_time()).
  Em geral, você nunca deve precisar interagir com o sistema de coleta de lixo GameMaker Studio 2 e normalmente os resultados de seu funcionamento não são visíveis, mas alguns comandos GML estão disponíveis para obter informações sobre o que o coletor está fazendo e
    para influenciar seu comportamento de forma limitada.
  IMPORTANTE! Note que no HTML5 a coleta de lixo da plataforma alvo é tratada pelo mecanismo JavaScript e, portanto, nenhuma das funções listadas abaixo afetará seu funcionamento e a função gc_get_stats() retornará 0 para todos
    campos.
   
  
    gc_enable
    gc_is_enabled
    gc_collect
    gc_target_frame_time
    gc_get_target_frame_time
    gc_get_stats
  
   
  Para ajudar a decidir o que precisa de lixo coletado e quando você também tem algumas funções que podem ser usadas para criar e verificar referências fracas a estruturas. Uma referência fraca é uma referência que não protege o objeto referenciado da coleta
    por um coletor de lixo, e assim pode ser usado para verificar se uma estrutura ainda está "viva" (referenciada) ou não em algum lugar do jogo. As funções disponíveis para referenciamento fraco são:
   
  
    Ref_ref_create fraco
    fraco_ref_alive
    Ref_ref_uma_alive_baixa
  
   
   
   
  
    
      
        Voltar: ReferênciaGML
        A seguir: Funções variáveis
      
    
    © Copyright YoYo Games Ltd. 2021 Todos os direitos reservados
  
  
  

