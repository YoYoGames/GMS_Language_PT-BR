<?xml version="1.0" encoding="UTF-8"?>        

<glossgroup id="Default">          
<title>Glossary Definitions</title>        
<glossentry id="Default_absolute">
<glossterm>absoluto</glossterm>
<glossdef>Um valor absoluto é aquele em que o sinal do valor é ignorado, essencialmente convertendo todos os valores em positivos ou zero. Assim - por exemplo - um valor absoluto para -10 seria 10.</glossdef></glossentry>
<glossentry id="Default_algorithm">
<glossterm>algoritmo</glossterm>
<glossdef>Um algoritmo é basicamente um conjunto de instruções ou regras destinadas a resolver um problema definido. O problema pode ser simples como adicionar dois números ou um complexo, como converter um arquivo de vídeo de um formato para outro ou comprimir o áudio em um arquivo de tamanho menor.</glossdef></glossentry>
<glossentry id="Default_anti-aliasing">
<glossterm>anti-aliasing</glossterm>
<glossdef>Esta é uma técnica usada para suavizar linhas ou texturas que de outra forma seriam denteadas, misturando a cor de uma borda com a cor dos pixels ao seu redor. O resultado deve ser uma aparência mais agradável e realista, dependendo da intensidade do efeito.</glossdef></glossentry>
<glossentry id="Default_API">
<glossterm>API</glossterm>
<glossdef>A sigla 'API' significa Interface de Programação de Aplicativos, e se refere a conjuntos de regras, rotinas e protocolos usados para construir aplicações de software. As APIs ajudam na comunicação com programas ou serviços de terceiros, que podem ser usados para construir diferentes softwares. Empresas como Facebook e Twitter usam ativamente as APIs para ajudar os desenvolvedores a obter acesso mais fácil aos seus serviços, e no GameMaker Studio 2 você verá o scronym da API usado quando se fala de extensões - por exemplo, a API de Serviços do Google Play ou a API do Amazon Game On.</glossdef></glossentry>
<glossentry id="Default_application_surface">
<glossterm>superfície de aplicação</glossterm>
<glossdef>A superfície de aplicação é uma superfície especial incorporada que o GameMaker Studio 2 desenhará tudo nos Eventos de Sorteio de um jogo (uma superfície é essencialmente uma área de memória reservada para gráficos). Esta superfície é então desenhada para o buffer de exibição no final de cada quadro do jogo, exibindo seu conteúdo para o jogador.</glossdef></glossentry>
<glossentry id="Default_architectures">
<glossterm>arquiteturas</glossterm>
<glossdef>A arquitetura de um chip processador (CPU) é uma descrição de seus componentes básicos e de suas operações básicas. Cada família de processadores tem sua própria arquitetura, como ARM ou x64.</glossdef></glossentry>
<glossentry id="Default_ARGB">
<glossterm>ARGB</glossterm>
<glossdef>Este é um anacronimo para Alfa, Vermelho, Verde, Azul, e é usado para se referir aos componentes de cor especificados como um valor hexadecimal, por exemplo: #FF53E270, onde cada conjunto de dois dígitos representa um único componente. Quebrando o exemplo ARGB acima, obtemos os seguintes valores de componentes: Alfa(FF), Vermelho(53), Verde(E2) e Azul(70).</glossdef></glossentry>
<glossentry id="Default_argument">
<glossterm>argumento</glossterm>
<glossdef>Um argumento (também conhecido como um parâmetro) é um valor que é passado para uma função. Por exemplo, a função GameMaker Language 'sqr(num)' é uma função que lhe dará o quadrado de um número que você fornece como argumento, por exemplo: 'a = sqr(4);' Aqui o argumento é 4, e a função retornará 16, que é armazenada na variável 'a'.</glossdef></glossentry>
<glossentry id="Default_asset_key">
<glossterm>chave do ativo</glossterm>
<glossdef>Uma posição na linha do tempo na folha de papelão onde um ativo foi colocado. Uma chave de ativos pode ser feita para durar vários quadros.</glossdef></glossentry>
<glossentry id="Default_Asset_Track">
<glossterm>pista de ativos</glossterm>
<glossdef>Uma faixa no painel de seqüências que contém um único ativo, seja um duende, um som, uma instância ou uma seqüência.</glossdef></glossentry>
<glossentry id="Default_assignment">
<glossterm>missão</glossterm>
<glossdef>Uma atribuição é simplesmente o termo usado quando definimos (atribuímos) um valor a uma variável.</glossdef></glossentry>
<glossentry id="Default_backend">
<glossterm>backend</glossterm>
<glossdef>O backend é a parte de um programa que é executado em segundo plano e é opaco para o usuário, geralmente sem a necessidade de qualquer interação do usuário. Por exemplo, o lado servidor das coisas ao fazer programação em rede pela Internet, ou o processamento de dados que acontece nos bastidores de um jogo de RPG. Este é essencialmente o oposto do frontend.</glossdef></glossentry>
<glossentry id="Default_bezier_interpolation">
<glossterm>interpolação bezier</glossterm>
<glossdef>A interpolação de Bezier envolve estimar um novo valor conectando dois valores conhecidos adjacentes com uma curva estriada gerada matematicamente, que pode ser editada usando "alças" anexadas a cada ponto. Você pode então obter o valor interpolado, verificando qualquer ponto ao longo da linha.</glossdef></glossentry>
<glossentry id="Default_bit">
<glossterm>bit</glossterm>
<glossdef>Um único valor de dados que pode ser 1 ou 0 (verdadeiro ou falso). Os bits são combinados em blocos de 8 para criar um byte.</glossdef></glossentry>
<glossentry id="Default_bit_depth">
<glossterm>profundidade de bit</glossterm>
<glossdef>A profundidade de bits refere-se ao número de bits em cada amostra de um arquivo de áudio. A menor profundidade de bits dá um som de pior qualidade, mas um arquivo de tamanho muito menor. Profundidades de bits mais baixas são normalmente usadas para pequenos efeitos sonoros e patforms onde a memória pode ser um problema (como HTML5).</glossdef></glossentry>
<glossentry id="Default_bit_rate">
<glossterm>taxa de bits</glossterm>
<glossdef>A taxa de bits é medida em Kilobits por segundo (kbps ou k) e é o número de bits codificados por segundo ou o número de bits transmitidos ou recebidos por segundo. Quanto maior a taxa de bits e a taxa de amostragem, maior a qualidade de áudio, mas maior o poder de processamento e a largura de banda necessária. Menores taxas de bits criam um tamanho de arquivo menor e utilizam menos processamento e largura de banda, mas com uma queda na qualidade de áudio. Para música de boa qualidade geralmente é preferível uma taxa de bits de 64-128kbps (96kbps recomendado).</glossdef></glossentry>
<glossentry id="Default_bitmap">
<glossterm>bitmap</glossterm>
<glossdef>Um bitmap é o termo usado para descrever qualquer imagem estática que é composta de pixels coloridos que são armazenados como bits (ao contrário das imagens vetoriais que são armazenadas usando algoritmos matemáticos). PNG, JPG e BMP são exemplos de imagens bitmap, enquanto que SWF seria um exemplo de uma imagem vetorial.</glossdef></glossentry>
<glossentry id="Default_bounding_box">
<glossterm>caixa de delimitação</glossterm>
<glossdef>Para sprites, a caixa de delimitação é o nome dado às bordas da área na qual as colisões serão detectadas inicialmente, e não precisa ser do mesmo tamanho do duende ao qual está sendo aplicado. Para seqüências, a caixa de delimitação é a borda externa do espaço total que um ou mais bens ocupam na tela.</glossdef></glossentry>
<glossentry id="Default_build_tools">
<glossterm>construir ferramentas</glossterm>
<glossdef>As ferramentas de construção são aplicações externas que o GameMaker Studio 2 requer para gerar pacotes executáveis para as diferentes plataformas alvo.</glossdef></glossentry>
<glossentry id="Default_byte">
<glossterm>byte</glossterm>
<glossdef>Um byte é uma unidade de dados com oito dígitos binários, e cada um dos dígitos que compõem um byte são chamados de bits, ou seja: um byte é 8 bits, e um bit pode ser 1 ou 0.</glossdef></glossentry>
<glossentry id="Default_Cache">
<glossterm>Cache</glossterm>
<glossdef>O cache é uma coleção de arquivos que são gerados pelo GameMaker uma vez e depois armazenados e reutilizados em várias execuções de um projeto. Note que este cache pode às vezes se tornar 'obsoleto', o que significa que ele deve ser liberado para forçar o GameMaker a reconstruí-lo do zero, garantindo que nenhum arquivo obsoleto corrompa seu jogo final executável.</glossdef></glossentry>
<glossentry id="Default_callback">
<glossterm>ligação de retorno</glossterm>
<glossdef>Uma chamada de retorno é simplesmente uma função que funciona e depois aciona outra função (ou bloco de código) quando termina de fazer o que quer que tenha sido designado para fazer. Por exemplo, a função sprite_add() acionará uma callback no evento assíncrono de imagem carregada quando o sprite tiver sido carregado.</glossdef></glossentry>
<glossentry id="Default_catmull-rom_interpolation">
<glossterm>interpolação catmull-rom</glossterm>
<glossdef>Este é um tipo de interpolação não-linear baseada em splines matemáticos. É usado para estimar um novo valor conectando dois valores conhecidos adjacentes usando curvas "lisas" (splines), e um novo valor pode ser derivado de qualquer ponto ao longo da linha.</glossdef></glossentry>
<glossentry id="Default_Compiling">
<glossterm>Compilação</glossterm>
<glossdef>A compilação é quando o GameMaker pega seu código e o coleta de forma a criar um pacote executável que será executado em um dispositivo como um jogo.</glossdef></glossentry>
<glossentry id="Default_compression">
<glossterm>compressão</glossterm>
<glossdef>A compressão é o uso de algoritmos matemáticos para reduzir o tamanho de um arquivo. Isto é usado em particular para arquivos de áudio e imagem, onde formatos como JPG (imagem) e MP3 (áudio) são formatos comprimidos. A compressão geralmente resulta em arquivos de tamanho muito menor, mas com algumas perdas de dados que podem ou não ser notadas, dependendo do tipo e da força da compressão utilizada. Os formatos não compactados seriam BMP (imagem) ou WAV (áudio), que têm tamanhos de arquivo maiores, mas sem perda de dados.</glossdef></glossentry>
<glossentry id="Default_conditional">
<glossterm>condicional</glossterm>
<glossdef>Condicionais, declarações condicionais e expressões condicionais são características da linguagem de programação geral, e ajudam o código a fazer uma escolha se o resultado for verdadeiro ou falso. Estes podem realizar diferentes ações dependendo da necessidade do programador, e vários condicionais podem ser combinados em uma única condição, desde que o valor final da condição seja verdadeiro ou falso. Exemplos de declarações condicionais são 'se' e 'enquanto'.</glossdef></glossentry>
<glossentry id="Default_constants">
<glossterm>constante</glossterm>
<glossdef>Uma constante é um termo usado para descrever um valor nomeado que não muda durante a execução do programa. O GameMaker Studio 2 tem uma série de constantes embutidas - por exemplo, os_windows - mas você também pode criar seus próprios valores constantes para uso em seus projetos (chamados Macros) e extensões.</glossdef></glossentry>
<glossentry id="Default_CPU_overhead">
<glossterm>Despesas gerais de CPU</glossterm>
<glossdef>O overhead da CPU mede a quantidade de trabalho que a unidade central de processamento de um computador pode realizar e a porcentagem dessa capacidade que é utilizada pelas tarefas individuais de computação.</glossdef></glossentry>
<glossentry id="Default_deadzone">
<glossterm>deadzone</glossterm>
<glossdef>A zona morta é a distância que você tem que mover um bastão analógico antes do jogo reconhecer que ele está sendo movido. Uma zona morta baixa fará qualquer movimento leve do bastão analógico mover seu jogador ou pontaria ou o que quer que seja. Um valor alto de zona morta significa que o bastão analógico precisa de um movimento muito maior antes que o jogo o detecte e mova o que quer que esteja sendo controlado.</glossdef></glossentry>
<glossentry id="Default_back-buffer">
<glossterm>buffer de exibição</glossterm>
<glossdef>O buffer de exibição é a "tela" onde tudo é finalmente desenhado. Alguns eventos visam isso diretamente (como o evento de Pré-Sorteio), enquanto outros primeiro desenham para a superfície da aplicação e depois desenham isso para o buffer de exibição.</glossdef></glossentry>
<glossentry id="Default_Dope_Sheet">
<glossterm>Folha de Droga</glossterm>
<glossdef>A Dope Sheet é a representação visual da linha de tempo da seqüência, e onde você pode adicionar, remover e editar as diferentes chaves de ativos e chaves de parâmetros que afetam como as diferentes faixas na seqüência se comportarão ao longo do tempo.</glossdef></glossentry>
<glossentry id="Default_encoding">
<glossterm>codificando</glossterm>
<glossdef>A codificação transforma os dados em outro formato usando um esquema que está disponível publicamente para que possam ser facilmente revertidos. Isto não é o mesmo que criptografia, pois não requer uma chave para descodificá-la. A codificação é geralmente usada para mudar os dados em um formato para uso do eaiser por um sistema diferente (como o envio de dados para um servidor), ou para tornar os dados ilegíveis para o olho humano.</glossdef></glossentry>
<glossentry id="Default_EULA">
<glossterm>EULA</glossterm>
<glossdef>O Contrato de Licença de Usuário Final (EULA) é um documento legal que delineia a licença para um produto que você está obtendo.</glossdef></glossentry>
<glossentry id="Default_exception">
<glossterm>exceção</glossterm>
<glossdef>Uma condição especial, inesperada e anômala encontrada durante a execução de um programa é conhecida como uma exceção. Também pode ser denominada como um erro ou uma condição que altera o caminho do programa ou do microprocessador para um caminho diferente. Um exemplo de uma exceção pode ser o caso quando um programa tenta acessar uma variável, mas a variável não existe. As exceções devem ser tratadas e erradicadas no código do programa para evitar qualquer erro fatal, um processo chamado de depuração.</glossdef></glossentry>
<glossentry id="Default_executable_package">
<glossterm>pacote executável</glossterm>
<glossdef>Um pacote de arquivos que são usados para executar um programa. No GameMaker Studio isto pode ser um único arquivo - como um instalador para Windows - ou múltiplos arquivos - como a saída HTML5.</glossdef></glossentry>
<glossentry id="Default_expression">
<glossterm>expressão</glossterm>
<glossdef>Uma expressão é uma combinação de uma ou mais constantes, variáveis, operadores e/ou funções que são interpretadas de acordo com regras particulares de precedência e associação para devolver outro valor. Uma expressão simples seria (5 5), que retorna 10.</glossdef></glossentry>
<glossentry id="Default_floating_point">
<glossterm>ponto flutuante</glossterm>
<glossdef>Os números de pontos flutuantes são números que contêm pontos decimais flutuantes. Por exemplo, os números 5,5, 0,001, e -2.345,6789 são números de ponto flutuante. Números que não têm casas decimais são chamados inteiros.</glossdef></glossentry>
<glossentry id="Default_font">
<glossterm>fonte</glossterm>
<glossdef>Uma fonte é uma coleção de glifos gráficos usados para representar texto em um idioma. As fontes podem ser de diferentes pesos, tamanhos e estilos e são usadas para exibir qualquer conteúdo escrito em um projeto.</glossdef></glossentry>
<glossentry id="Default_framework">
<glossterm>estrutura</glossterm>
<glossdef>Uma estrutura é um alicerce básico de código que pode ser alterado e/ou construído pelo usuário. Uma estrutura pode incluir diferentes bibliotecas de software, APIs, compiladores e muito mais. Em termos mais simples, uma estrutura fornece um ambiente favorável para um determinado tipo e nível de programação para um projeto. No GameMaker Studio 2 você pode, por exemplo, criar seus próprios projetos de framework (via pacotes de ativos locais) que contêm scripts e objetos para controles gerais, gerenciamento de estatísticas, redes ou qualquer outra coisa que você normalmente usa em seus projetos, e então importá-los para novos projetos logo no início para lhe dar o fundamento básico para conntinuar sem ter que reprogramar estes sistemas a cada vez.</glossdef></glossentry>
<glossentry id="Default_frontend">
<glossterm>frontend</glossterm>
<glossdef>O frontend é a parte de um programa que é 'front faceada', ou seja: a parte com a qual o usuário final interage. Por exemplo, no GameMaker Studio 2, a interface onde você faz a programação e adiciona ativos, etc... é o frontend do programa, pois é onde você interage com o programa e insere valores e arquivos e outras coisas. Este é essencialmente o oposto do backend.</glossdef></glossentry>
<glossentry id="Default_GameMaker:_Studio 1.4">
<glossterm>GameMaker: Estúdio 1.4</glossterm>
<glossdef>Uma versão anterior do software GameMaker (muitas vezes chamado Legacy GameMaker) que não está mais disponível nem é mais suportado.</glossdef></glossentry>
<glossentry id="Default_garbage_collector">
<glossterm>catador de lixo</glossterm>
<glossdef>O coletor de lixo é uma ferramenta automatizada que faz parte do código do jogo e é usado para remover certas coisas (como matrizes e estruturas) da memória quando elas não são mais referenciadas em seu código, sem a necessidade de que você as remova explicitamente.</glossdef></glossentry>
<glossentry id="Default_gizmos">
<glossterm>gizmos</glossterm>
<glossdef>Gizmo são diretamente manipuláveis, autocontidos, expressões idiomáticas de tela visual - essencialmente qualquer coisa que seja visual e possa ser interagida ou manipulada pelo usuário para gerar um efeito ou um resultado específico.</glossdef></glossentry>
<glossentry id="Default_GUI">
<glossterm>GUI</glossterm>
<glossdef>Abreviação de 'Graphical User Interface', que é uma interface de usuário que inclui elementos gráficos, tais como janelas, ícones e botões. No GameMaker você tem um conjunto específico de eventos de objetos (Draw GUI Events) que pode desenhar para esta camada especificamente projetada para coisas como pontuação, vidas, inventários, etc...</glossdef></glossentry>
<glossentry id="Default_hard-code">
<glossterm>código rígido</glossterm>
<glossdef>Na programação de computadores, o termo hard-coded é usado para descrever código que é considerado fixo e não é passível de mudança. As características hardcoded são incorporadas em hardware ou software de tal forma que não podem ser modificadas posteriormente. Por exemplo, se você está fazendo um jogo e 'hard-code' a saúde do jogador a 10, então você estaria usando o valor 10 em todo o código do jogo ao invés de usar uma variável.</glossdef></glossentry>
<glossentry id="Default_hashing">
<glossterm>hashing</glossterm>
<glossdef>Hashing é o método de criar uma cadeia ou valor relacionado a uma única fonte - geralmente um arquivo - e SOMENTE essa fonte. Por exemplo, no GameMaker você pode gerar um hash para um arquivo salvo, depois, antes de acessá-lo mais tarde, gerar outro hash para ele e verificar o hash original e o novo hash para determinar se o arquivo foi adulterado.</glossdef></glossentry>
<glossentry id="Default_HVS">
<glossterm>HSV</glossterm>
<glossdef>Isto significa Tonalidade, Saturação e Valor e é uma forma de expressar uma cor geralmente usando valores de 0 a 255. A tonalidade é o valor da tonalidade da cor, a saturação é a quantidade da cor a ser usada e o valor é o brilho da cor.</glossdef></glossentry>
<glossentry id="Default_HUD">
<glossterm>HUD</glossterm>
<glossdef>Nos jogos, o HUD representa o Heads-Up Display. Este é o método pelo qual as informações são visualmente transmitidas ao jogador como parte da interface do usuário de um jogo, de modo que coisas como a barra de saúde, ícones de status, pontuação, etc... tudo faz parte do HUD, e normalmente os elementos do HUD não requerem interação do usuário.</glossdef></glossentry>
<glossentry id="Default_IDE">
<glossterm>IDE</glossterm>
<glossdef>O IDE, ou Integrated Development Environment, é um aplicativo de software que oferece facilidades abrangentes aos programadores de computador para o desenvolvimento de software. Neste caso, todo o frontend do GameMaker Studio 2 é considerado a IDE, e inclui seções para criar gráficos, adicionar sons e adicionar código para fazer seus jogos.</glossdef></glossentry>
<glossentry id="Default_iteration">
<glossterm>iteração</glossterm>
<glossdef>Uma iteração é uma passagem única através de um conjunto de operações em seu código de projeto. Uma forma de iteração na programação de computadores é através de loops. Um laço repetirá um determinado segmento de código até que uma condição seja atendida e pode prosseguir. Cada vez que o computador executa um loop, ele é conhecido como uma iteração. Em termos simples, a iteração é o processo de repetir um determinado trecho de código uma e outra vez para executar uma determinada ação.</glossdef></glossentry>
<glossentry id="Default_JSON">
<glossterm>JSON</glossterm>
<glossdef>JSON significa JavaScript Object Notatio, e é um formato leve para armazenamento de dados. JSON é freqüentemente usado quando os dados são enviados de um servidor para uma página da Web e é considerado 'auto-descritivo' e fácil de entender e seguir quando visto.</glossdef></glossentry>
<glossentry id="Default_keyframe">
<glossterm>keyframe</glossterm>
<glossdef>Um quadro-chave (também chamado de chave de parâmetro) é um ponto na linha de tempo na folha de papelão onde uma mudança no valor de um parâmetro é definida.</glossdef></glossentry>
<glossentry id="Default_keyword">
<glossterm>palavra-chave</glossterm>
<glossdef>Palavras-chave são palavras especiais que são reservadas por uma linguagem de programação ou por um programa, pois têm um significado especial. Estas palavras-chave são reservadas para realizar determinadas tarefas, e podem ser comandos ou parâmetros. Cada linguagem de programação tem um conjunto de palavras-chave reservadas (também conhecidas como nomes reservados) que não podem ser usadas como nomes variáveis, e a linguagem GameMaker não é exceção, onde palavras como retorno, enquanto, se e quebra são todas as kewords reservadas usadas na linguagem de programação.</glossdef></glossentry>
<glossentry id="Default_linear_interpolation">
<glossterm>interpolação linear</glossterm>
<glossdef>A interpolação linear envolve a estimativa de um novo valor conectando dois valores conhecidos adjacentes com uma linha reta. Você pode então obter o valor interpolado, verificando qualquer ponto ao longo da linha. Nos gráficos, a interpolação linear refere-se a um método básico de suavização das bordas dos pixels.</glossdef></glossentry>
<glossentry id="Default_method">
<glossterm>método</glossterm>
<glossdef>No GameMaker, um método é o nome dado a uma função definida pelo usuário que foi vinculada a uma instância, de modo que a variável da instância é o nome da diversão e o que você usa para chamá-la.</glossdef></glossentry>
<glossentry id="Default_operand">
<glossterm>operando</glossterm>
<glossdef>Um operando é um termo usado para denotar os valores que podem ser manipulados utilizando diferentes operadores. Na expressão A B C, A, B e C estão os operandos.</glossdef></glossentry>
<glossentry id="Default_operator">
<glossterm>operador</glossterm>
<glossdef>Um operador é um termo usado para denotar algo que pode manipular diferentes operandos. Na expressão A B - C, e - são os operadores. Exemplos de operadores diferentes são (adição), - (subtração), = (igual), != (não igual) e >= (maior ou igual a), mas há muitos mais.</glossdef></glossentry>
<glossentry id="Default_parameter_key">
<glossterm>chave de parâmetro</glossterm>
<glossdef>Uma chave de parâmetro (também chamada de keyframe) é um ponto na linha de tempo na folha de papelão onde uma mudança no valor de um parâmetro é definida.</glossdef></glossentry>
<glossentry id="Default_parameter_tracks">
<glossterm>faixas de parâmetros</glossterm>
<glossdef>Uma faixa que foi atribuída a uma faixa de ativos no painel da faixa e que muda um único parâmetro para a faixa de ativos à qual está ligada, como a posição ou o índice de imagem.</glossdef></glossentry>
<glossentry id="Default_physics">
<glossterm>Física</glossterm>
<glossdef>No GameMaker, quando falamos de um objeto, instância ou sala usando 'física', queremos dizer que ele está usando as funções de simulação física embutidas, baseadas na biblioteca de física do Box2D.</glossdef></glossentry>
<glossentry id="Default_playhead">
<glossterm>playhead</glossterm>
<glossdef>A posição atual 'play' dentro da linha de tempo na folha de dope Sequences ou na vista da moldura do editor Sprite. Em seqüências (e sprites), isto se moverá conforme a animação é visualizada, e você pode colocá-la em quadros específicos para ver e editar as chaves e quadros-chave naquela posição.</glossdef></glossentry>
<glossentry id="Default_port_number">
<glossterm>número da porta</glossterm>
<glossdef>Um número de porta é uma maneira de identificar um processo específico para o qual uma mensagem da Internet ou de outra rede deve ser encaminhada quando chega a um servidor.</glossdef></glossentry>
<glossentry id="Default_Remote_Workers">
<glossterm>Trabalhadores remotos</glossterm>
<glossdef>Um Trabalhador Remoto é um programa especial que o GameMaker Studio 2 utilizará em certas plataformas para criar seus executáveis de jogo sem realmente executar o IDE GameMaker Studio 2 naquela plataforma</glossdef></glossentry>
<glossentry id="Default_render">
<glossterm>traduzido em</glossterm>
<glossdef>Quando algo é apresentado no GameMaker Studio 2, geralmente significa que foi simplesmente "atraído para o buffer de exibição" ou "atraído para uma superfície".  A renderização também pode se referir ao processo de transformar algum tipo de fonte vetorial (como uma fonte) em uma imagem bitmap,.</glossdef></glossentry>
<glossentry id="Default_RSS">
<glossterm>RSS</glossterm>
<glossdef>Abreviação para 'Rich Site Summary', e é um sistema padronizado para a distribuição de conteúdo de uma editora on-line para usuários da Internet.</glossdef></glossentry>
<glossentry id="Default_Runtime">
<glossterm>Tempo de execução</glossterm>
<glossdef>O tempo de execução no GameMaker Studio 2 é a coleção de ativos de compilação que é exigida pelo programa para criar um pacote executável final para uma determinada plataforma alvo. Estes são instalados separadamente da IDE, e podem ser alterados e atualizados a qualquer momento.</glossdef></glossentry>
<glossentry id="Default_sample_rate">
<glossterm>taxa de amostragem</glossterm>
<glossdef>A taxa de amostragem é o número de amostras de áudio transportadas por segundo, medidas em Hz ou kHz (um kHz sendo 1000 Hz). Quanto maior a taxa de amostragem, mais um som se aproximará da forma de onda analógica original, mas quanto maior for o tamanho do arquivo. Em geral, os efeitos sonoros são bons com uma taxa de amostragem menor do que a música.</glossdef></glossentry>
<glossentry id="Default_SCM">
<glossterm>SCM</glossterm>
<glossdef>SCM significa Source Control Management, que é um programa (ou conjunto de programas) responsável pela atualização de versões do código fonte para um projeto. SCM permite armazenar um histórico de mudanças de código em execução, assim como rever e desfazer quaisquer mudanças feitas no código fonte, entre outras coisas.</glossdef></glossentry>
<glossentry id="Default_SDK">
<glossterm>SDK</glossterm>
<glossdef>SDK significa 'Software Development Kit' (Kit de Desenvolvimento de Software). Isto geralmente se refere a uma coleção de software e/ou pacotes usados para desenvolver aplicações para um dispositivo ou sistema operacional específico.</glossdef></glossentry>
<glossentry id="Default_server">
<glossterm>servidor</glossterm>
<glossdef>Em computação, um servidor é um programa de computador ou um dispositivo que fornece funcionalidade para outros programas ou dispositivos, chamados de 'clientes'.</glossdef></glossentry>
<glossentry id="Default_shader">
<glossterm>shaders</glossterm>
<glossdef>Um shader é uma coleção de pequenos programas que rodam diretamente sobre a GPU para criar gráficos e efeitos gráficos. Estes são muito rápidos para rodar e liberam a CPU para fazer outras coisas.</glossdef></glossentry>
<glossentry id="Default_smooth_interpolation">
<glossterm>interpolação suave</glossterm>
<glossdef>A interpolação suave envolve a estimativa de um novo valor, conectando dois valores conhecidos adjacentes com uma curva estriada gerada matematicamente. Você pode então obter o valor interpolado, verificando qualquer ponto ao longo da linha.</glossdef></glossentry>
<glossentry id="Default_source_code">
<glossterm>código fonte</glossterm>
<glossdef>O código fonte é o componente fundamental de um programa de computador que é necessário para que o programa seja executado.</glossdef></glossentry>
<glossentry id="Default_spline">
<glossterm>spline</glossterm>
<glossdef>Uma estria é basicamente uma curva suave usada para unir pontos. Matematicamente falando, ela é desdobrada como uma função polinomial suficientemente lisa que é definida por peças, e possui um alto grau de suavidade nos locais onde as peças polinomiais se conectam.</glossdef></glossentry>
<glossentry id="Default_sprites">
<glossterm>sprites</glossterm>
<glossdef>Um sprite é um gráfico de bitmap que é projetado para fazer parte de uma cena maior. Pode ser uma imagem estática ou um gráfico animado.</glossdef></glossentry>
<glossentry id="Default_statement">
<glossterm>declaração</glossterm>
<glossdef>Na programação, uma declaração é uma única linha de código escrita legalmente em uma linguagem de programação que expressa uma ação a ser executada. Uma declaração pode ter componentes internos próprios, incluindo expressões, operadores e funções. Um exemplo de uma declaração é A = B 5. Um programa GameMaker Studio 2 não é nada além de uma seqüência de uma ou mais declarações que, juntas, executam uma tarefa (como mover o jogador).</glossdef></glossentry>
<glossentry id="Default_swatches">
<glossterm>swatches</glossterm>
<glossdef>Uma amostra é simplesmente uma pequena amostra quadrada de uma cor ou de um material usado para ilustrar o seu aspecto.</glossdef></glossentry>
<glossentry id="Default_syntax">
<glossterm>sintaxe</glossterm>
<glossdef>Similar às linguagens humanas, as linguagens de programação têm seu próprio conjunto de regras sobre como as declarações podem ser transmitidas, e este conjunto de regras é conhecido como a sintaxe. Embora várias linguagens de programação compartilhem muitas características, funções e capacidades, elas geralmente diferem na sintaxe. Sem o uso adequado da sintaxe, não se pode escrever um programa executável, e uma sintaxe errada levará a erros na compilação.</glossdef></glossentry>
<glossentry id="Default_texel">
<glossterm>texel</glossterm>
<glossdef>O Texel (ou elemento de textura) é a unidade fundamental do espaço de textura, assim como um pixel é o elemento fundamental do espaço de imagem. As texturas são representadas por matrizes de Texels, assim como as imagens são representadas por matrizes de pixels. Ao texturizar uma superfície 3D (um processo conhecido como mapeamento de textura), o renderizador mapeia os textos para os pixels apropriados na imagem de saída.</glossdef></glossentry>
<glossentry id="Default_texture_atlas">
<glossterm>atlas de textura</glossterm>
<glossdef>Outro nome para uma página de textura, que é simplesmente uma coleção de imagens requeridas por um ou mais sprites em seu jogo, organizado de forma otimizada para utilizar a menor memória de textura possível.</glossdef></glossentry>
<glossentry id="Default_texture_page">
<glossterm>página de textura</glossterm>
<glossdef>Uma página de textura (também chamada de atlas de textura) é uma coleção de imagens (sprites, tilesets, caracteres de fonte, etc...) que são agrupadas de forma otimizada para que ocupem a menor quantidade de memória de textura quando seu jogo é executado.</glossdef></glossentry>
<glossentry id="Default_tile_map">
<glossterm>mapa de azulejos</glossterm>
<glossdef>O mapa de azulejos é o nome dado a uma coleção de azulejos tirados de um conjunto de azulejos e usados para criar níveis em um jogo.</glossdef></glossentry>
<glossentry id="Default_tile-sets">
<glossterm>jogos de azulejos</glossterm>
<glossdef>Um conjunto de azulejos é uma coleção de ativos gráficos quadrados ou retangulares dispostos em uma grade como uma única imagem. Cada item da grade pode então ser colocado várias vezes em uma sala para criar uma cena maior chamada "mapa de azulejos".</glossdef></glossentry>
<glossentry id="Default_timeline">
<glossterm>linhas do tempo</glossterm>
<glossdef>Uma linha do tempo no GameMaker Studio 2 é uma coleção linear de eventos que serão executados em ordem consecutiva. Cada evento pode receber código ou ações para executar uma tarefa e quando a linha do tempo for executada, estas tarefas serão executadas conforme cada evento na linha do tempo for alcançado.</glossdef></glossentry>
<glossentry id="Default_Track_Panel">
<glossterm>Painel de Pista</glossterm>
<glossdef>A área do editor de seqüências que mostra todas as diferentes faixas em uma seqüência - faixas de ativos, faixas de parâmetros, grupos de faixas e grupos de máscaras de clipes.</glossdef></glossentry>
<glossentry id="Default_truth_table">
<glossterm>tabela da verdade</glossterm>
<glossdef>Uma tabela verdade é uma tabela matemática utilizada na lógica - especificamente em conexão com a álgebra booleana e funções booleanas - que estabelece os valores funcionais das expressões lógicas em cada um de seus argumentos funcionais, ou seja, para cada combinação de valores tomados por suas variáveis lógicas.</glossdef></glossentry>
<glossentry id="Default_typo">
<glossterm>erro datilográfico</glossterm>
<glossdef>Erro tipográfico.</glossdef></glossentry>
<glossentry id="Default_URL">
<glossterm>URL</glossterm>
<glossdef>Abreviação de 'Universal Resource Locator', e é basicamente o endereço de algo na Internet.</glossdef></glossentry>
<glossentry id="Default_v-sync">
<glossterm>v-sync</glossterm>
<glossdef>A sincronização V-sync ou vertical é usada para sincronizar sua velocidade de atualização do jogo com a taxa de atualização do monitor. Isto pode reduzir o rasgo da tela - que é quando sua tela exibe partes de vários quadros de uma só vez - mas também pode causar problemas de desempenho ou problemas em monitores com altas taxas de atualização.</glossdef></glossentry>
<glossentry id="Default_variable">
<glossterm>variável</glossterm>
<glossdef>Uma variável é um valor nomeado dentro de um programa que pode ser modificado, armazenado e exibido sempre que necessário. Por exemplo, se tivermos uma variável inteira com um nome XYZ e ela armazenar um valor 10, podemos então fazer coisas como A = XYZ 10, que definirá o valor da variável A para 20, já que XYZ é 10 e estamos adicionando 10 a ela. Você também pode mudar os valores da variável usando operadores, assim fazendo XYZ = XYZ 100 modificaria o valor de nossa variável XYZ para ser igual a 110. As variáveis também podem ser usadas para armazenar identificadores e referências a diferentes ativos.</glossdef></glossentry>
<glossentry id="Default_vector">
<glossterm>vetor</glossterm>
<glossdef>Um vetor é uma construção matemática que tem um tamanho, chamado de magnitude, e uma direção. No GameMaker, um vetor é normalmente usado para mostrar a distância e a direção em que algo se moveu. Um vetor também pode ser usado para definir imagens e certos formatos de imagem como SWF usam matemática vetorial para definir as imagens que elas contêm.</glossdef></glossentry>
<glossentry id="Default_Version_Number">
<glossterm>Número da versão</glossterm>
<glossdef>Um número de versão é um conjunto único de números atribuídos a um lançamento específico de um programa de software, jogo ou ativo, normalmente com o formato MAJOR.MINOR.MAINTENANCE, por exemplo: v2.3.56. Normalmente, à medida que atualizações e edições inteiramente novas de um jogo ou ativo são lançadas, o número de versão aumentará.</glossdef></glossentry>
<glossentry id="Default_vertex">
<glossterm>vértice</glossterm>
<glossdef>Um vértice é o nome dado a um único ponto de um polígono que contém várias características que definem a sua posição, sua cor e sua textura. Em computação gráfica, isto geralmente significa um canto de um triângulo que é usado para criar um primitivo, e uma combinação de tais primitivos é o que faz os gráficos na tela.</glossdef></glossentry>
<glossentry id="Default_virtual_machine">
<glossterm>Máquina Virtual (VM)</glossterm>
<glossdef>No GameMaker, o VM (Virtual Machine) é um método de compilação que utiliza um runner genérico para cada plataforma e depois usa-o para interpretar o código para seu jogo.</glossdef></glossentry>
<glossentry id="Default_VRAM">
<glossterm>VRAM</glossterm>
<glossdef>VRAM é a quantidade de memória disponível para vídeo, ou seja: o espaço de memória que pode armazenar texturas e imagens.</glossdef></glossentry>
<glossentry id="Default_weak_reference">
<glossterm>referência fraca</glossterm>
<glossdef>Uma referência fraca é uma referência que não protege o objeto referenciado da coleta por um coletor de lixo, e assim pode ser usada para verificar se uma estrutura ainda está "viva" (referenciada) ou não em algum lugar do jogo.</glossdef></glossentry>
<glossentry id="Default_YoYo_Compiler">
<glossterm>Compilador YoYo (YYC)</glossterm>
<glossdef>Este é um compilador especial para criar pacotes executáveis que usam código nativo em vez de código interceptado e um runner (que é o que o GameMaker VM compile usa). O código compilado é mais rápido de ser executado, mas leva mais tempo para compilar o executável.</glossdef></glossentry>
<glossentry id="Default_boolean">
<glossterm>booleano</glossterm>
<glossdef>Um booleano é um tipo de variável que pode retornar verdadeiro ou falso com base em seu valor, e pode ser usado em condições e expressões. As constantes "falso" ou "verdadeiro" podem ser aplicadas a um booleano, que são o equivalente aos valores reais 0 e 1.</glossdef></glossentry></glossgroup>